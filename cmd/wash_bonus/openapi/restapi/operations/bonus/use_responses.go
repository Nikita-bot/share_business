// Code generated by go-swagger; DO NOT EDIT.

package bonus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"wash_bonus/openapi/models"
)

// UseNoContentCode is the HTTP code returned for type UseNoContent
const UseNoContentCode int = 204

/*
UseNoContent OK

swagger:response useNoContent
*/
type UseNoContent struct {

	/*
	  In: Body
	*/
	Payload *models.Profile `json:"body,omitempty"`
}

// NewUseNoContent creates UseNoContent with default headers values
func NewUseNoContent() *UseNoContent {

	return &UseNoContent{}
}

// WithPayload adds the payload to the use no content response
func (o *UseNoContent) WithPayload(payload *models.Profile) *UseNoContent {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the use no content response
func (o *UseNoContent) SetPayload(payload *models.Profile) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UseNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UseNoContent) UseResponder() {}

// UseNotFoundCode is the HTTP code returned for type UseNotFound
const UseNotFoundCode int = 404

/*
UseNotFound Profile not exists

swagger:response useNotFound
*/
type UseNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUseNotFound creates UseNotFound with default headers values
func NewUseNotFound() *UseNotFound {

	return &UseNotFound{}
}

// WithPayload adds the payload to the use not found response
func (o *UseNotFound) WithPayload(payload *models.Error) *UseNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the use not found response
func (o *UseNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UseNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UseNotFound) UseResponder() {}

// UseInternalServerErrorCode is the HTTP code returned for type UseInternalServerError
const UseInternalServerErrorCode int = 500

/*
UseInternalServerError Internal error

swagger:response useInternalServerError
*/
type UseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUseInternalServerError creates UseInternalServerError with default headers values
func NewUseInternalServerError() *UseInternalServerError {

	return &UseInternalServerError{}
}

// WithPayload adds the payload to the use internal server error response
func (o *UseInternalServerError) WithPayload(payload *models.Error) *UseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the use internal server error response
func (o *UseInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *UseInternalServerError) UseResponder() {}

type UseNotImplementedResponder struct {
	middleware.Responder
}

func (*UseNotImplementedResponder) UseResponder() {}

func UseNotImplemented() UseResponder {
	return &UseNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Use has not yet been implemented",
		),
	}
}

type UseResponder interface {
	middleware.Responder
	UseResponder()
}
