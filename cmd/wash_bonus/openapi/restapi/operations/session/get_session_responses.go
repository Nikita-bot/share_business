// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"wash_bonus/openapi/models"
)

// GetSessionOKCode is the HTTP code returned for type GetSessionOK
const GetSessionOKCode int = 200

/*
GetSessionOK OK

swagger:response getSessionOK
*/
type GetSessionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Session `json:"body,omitempty"`
}

// NewGetSessionOK creates GetSessionOK with default headers values
func NewGetSessionOK() *GetSessionOK {

	return &GetSessionOK{}
}

// WithPayload adds the payload to the get session o k response
func (o *GetSessionOK) WithPayload(payload *models.Session) *GetSessionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session o k response
func (o *GetSessionOK) SetPayload(payload *models.Session) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionOK) GetSessionResponder() {}

// GetSessionNotFoundCode is the HTTP code returned for type GetSessionNotFound
const GetSessionNotFoundCode int = 404

/*
GetSessionNotFound Profile not exists

swagger:response getSessionNotFound
*/
type GetSessionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSessionNotFound creates GetSessionNotFound with default headers values
func NewGetSessionNotFound() *GetSessionNotFound {

	return &GetSessionNotFound{}
}

// WithPayload adds the payload to the get session not found response
func (o *GetSessionNotFound) WithPayload(payload *models.Error) *GetSessionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session not found response
func (o *GetSessionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionNotFound) GetSessionResponder() {}

// GetSessionInternalServerErrorCode is the HTTP code returned for type GetSessionInternalServerError
const GetSessionInternalServerErrorCode int = 500

/*
GetSessionInternalServerError Internal error

swagger:response getSessionInternalServerError
*/
type GetSessionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSessionInternalServerError creates GetSessionInternalServerError with default headers values
func NewGetSessionInternalServerError() *GetSessionInternalServerError {

	return &GetSessionInternalServerError{}
}

// WithPayload adds the payload to the get session internal server error response
func (o *GetSessionInternalServerError) WithPayload(payload *models.Error) *GetSessionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session internal server error response
func (o *GetSessionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionInternalServerError) GetSessionResponder() {}

type GetSessionNotImplementedResponder struct {
	middleware.Responder
}

func (*GetSessionNotImplementedResponder) GetSessionResponder() {}

func GetSessionNotImplemented() GetSessionResponder {
	return &GetSessionNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetSession has not yet been implemented",
		),
	}
}

type GetSessionResponder interface {
	middleware.Responder
	GetSessionResponder()
}
