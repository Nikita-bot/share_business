// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"wash_bonus/openapi/models"
)

// PostSessionReader is a Reader for the PostSession structure.
type PostSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostSessionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostSessionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostSessionNoContent creates a PostSessionNoContent with default headers values
func NewPostSessionNoContent() *PostSessionNoContent {
	return &PostSessionNoContent{}
}

/*
PostSessionNoContent describes a response with status code 204, with default header values.

OK
*/
type PostSessionNoContent struct {
}

// IsSuccess returns true when this post session no content response has a 2xx status code
func (o *PostSessionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post session no content response has a 3xx status code
func (o *PostSessionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post session no content response has a 4xx status code
func (o *PostSessionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this post session no content response has a 5xx status code
func (o *PostSessionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this post session no content response a status code equal to that given
func (o *PostSessionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the post session no content response
func (o *PostSessionNoContent) Code() int {
	return 204
}

func (o *PostSessionNoContent) Error() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionNoContent ", 204)
}

func (o *PostSessionNoContent) String() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionNoContent ", 204)
}

func (o *PostSessionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSessionForbidden creates a PostSessionForbidden with default headers values
func NewPostSessionForbidden() *PostSessionForbidden {
	return &PostSessionForbidden{}
}

/*
PostSessionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostSessionForbidden struct {
}

// IsSuccess returns true when this post session forbidden response has a 2xx status code
func (o *PostSessionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post session forbidden response has a 3xx status code
func (o *PostSessionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post session forbidden response has a 4xx status code
func (o *PostSessionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this post session forbidden response has a 5xx status code
func (o *PostSessionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this post session forbidden response a status code equal to that given
func (o *PostSessionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the post session forbidden response
func (o *PostSessionForbidden) Code() int {
	return 403
}

func (o *PostSessionForbidden) Error() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionForbidden ", 403)
}

func (o *PostSessionForbidden) String() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionForbidden ", 403)
}

func (o *PostSessionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSessionNotFound creates a PostSessionNotFound with default headers values
func NewPostSessionNotFound() *PostSessionNotFound {
	return &PostSessionNotFound{}
}

/*
PostSessionNotFound describes a response with status code 404, with default header values.

Session not found
*/
type PostSessionNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this post session not found response has a 2xx status code
func (o *PostSessionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post session not found response has a 3xx status code
func (o *PostSessionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post session not found response has a 4xx status code
func (o *PostSessionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post session not found response has a 5xx status code
func (o *PostSessionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post session not found response a status code equal to that given
func (o *PostSessionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post session not found response
func (o *PostSessionNotFound) Code() int {
	return 404
}

func (o *PostSessionNotFound) Error() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionNotFound  %+v", 404, o.Payload)
}

func (o *PostSessionNotFound) String() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionNotFound  %+v", 404, o.Payload)
}

func (o *PostSessionNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSessionInternalServerError creates a PostSessionInternalServerError with default headers values
func NewPostSessionInternalServerError() *PostSessionInternalServerError {
	return &PostSessionInternalServerError{}
}

/*
PostSessionInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type PostSessionInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this post session internal server error response has a 2xx status code
func (o *PostSessionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post session internal server error response has a 3xx status code
func (o *PostSessionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post session internal server error response has a 4xx status code
func (o *PostSessionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post session internal server error response has a 5xx status code
func (o *PostSessionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post session internal server error response a status code equal to that given
func (o *PostSessionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post session internal server error response
func (o *PostSessionInternalServerError) Code() int {
	return 500
}

func (o *PostSessionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSessionInternalServerError) String() string {
	return fmt.Sprintf("[POST /session/{UID}/bonuses][%d] postSessionInternalServerError  %+v", 500, o.Payload)
}

func (o *PostSessionInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
