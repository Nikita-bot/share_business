// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"wash_bonus/openapi/models"
)

// GetBalanceReader is a Reader for the GetBalance structure.
type GetBalanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBalanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBalanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetBalanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBalanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBalanceOK creates a GetBalanceOK with default headers values
func NewGetBalanceOK() *GetBalanceOK {
	return &GetBalanceOK{}
}

/*
GetBalanceOK describes a response with status code 200, with default header values.

OK
*/
type GetBalanceOK struct {
	Payload *GetBalanceOKBody
}

// IsSuccess returns true when this get balance o k response has a 2xx status code
func (o *GetBalanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get balance o k response has a 3xx status code
func (o *GetBalanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get balance o k response has a 4xx status code
func (o *GetBalanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get balance o k response has a 5xx status code
func (o *GetBalanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get balance o k response a status code equal to that given
func (o *GetBalanceOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetBalanceOK) Error() string {
	return fmt.Sprintf("[GET /profile/balance][%d] getBalanceOK  %+v", 200, o.Payload)
}

func (o *GetBalanceOK) String() string {
	return fmt.Sprintf("[GET /profile/balance][%d] getBalanceOK  %+v", 200, o.Payload)
}

func (o *GetBalanceOK) GetPayload() *GetBalanceOKBody {
	return o.Payload
}

func (o *GetBalanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetBalanceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBalanceNotFound creates a GetBalanceNotFound with default headers values
func NewGetBalanceNotFound() *GetBalanceNotFound {
	return &GetBalanceNotFound{}
}

/*
GetBalanceNotFound describes a response with status code 404, with default header values.

Profile not exists
*/
type GetBalanceNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get balance not found response has a 2xx status code
func (o *GetBalanceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get balance not found response has a 3xx status code
func (o *GetBalanceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get balance not found response has a 4xx status code
func (o *GetBalanceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get balance not found response has a 5xx status code
func (o *GetBalanceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get balance not found response a status code equal to that given
func (o *GetBalanceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetBalanceNotFound) Error() string {
	return fmt.Sprintf("[GET /profile/balance][%d] getBalanceNotFound  %+v", 404, o.Payload)
}

func (o *GetBalanceNotFound) String() string {
	return fmt.Sprintf("[GET /profile/balance][%d] getBalanceNotFound  %+v", 404, o.Payload)
}

func (o *GetBalanceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBalanceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBalanceInternalServerError creates a GetBalanceInternalServerError with default headers values
func NewGetBalanceInternalServerError() *GetBalanceInternalServerError {
	return &GetBalanceInternalServerError{}
}

/*
GetBalanceInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetBalanceInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get balance internal server error response has a 2xx status code
func (o *GetBalanceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get balance internal server error response has a 3xx status code
func (o *GetBalanceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get balance internal server error response has a 4xx status code
func (o *GetBalanceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get balance internal server error response has a 5xx status code
func (o *GetBalanceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get balance internal server error response a status code equal to that given
func (o *GetBalanceInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetBalanceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /profile/balance][%d] getBalanceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBalanceInternalServerError) String() string {
	return fmt.Sprintf("[GET /profile/balance][%d] getBalanceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBalanceInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBalanceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetBalanceOKBody get balance o k body
swagger:model GetBalanceOKBody
*/
type GetBalanceOKBody struct {

	// balance
	Balance int64 `json:"balance,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *GetBalanceOKBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// balance
		Balance int64 `json:"balance,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Balance = props.Balance
	return nil
}

// Validate validates this get balance o k body
func (o *GetBalanceOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get balance o k body based on context it is used
func (o *GetBalanceOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetBalanceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBalanceOKBody) UnmarshalBinary(b []byte) error {
	var res GetBalanceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
