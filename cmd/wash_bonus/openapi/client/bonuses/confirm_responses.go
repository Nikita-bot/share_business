// Code generated by go-swagger; DO NOT EDIT.

package bonuses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"wash_bonus/openapi/models"
)

// ConfirmReader is a Reader for the Confirm structure.
type ConfirmReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfirmReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewConfirmNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConfirmBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConfirmInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConfirmNoContent creates a ConfirmNoContent with default headers values
func NewConfirmNoContent() *ConfirmNoContent {
	return &ConfirmNoContent{}
}

/*
ConfirmNoContent describes a response with status code 204, with default header values.

OK
*/
type ConfirmNoContent struct {
	Payload *models.Profile
}

// IsSuccess returns true when this confirm no content response has a 2xx status code
func (o *ConfirmNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this confirm no content response has a 3xx status code
func (o *ConfirmNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this confirm no content response has a 4xx status code
func (o *ConfirmNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this confirm no content response has a 5xx status code
func (o *ConfirmNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this confirm no content response a status code equal to that given
func (o *ConfirmNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *ConfirmNoContent) Error() string {
	return fmt.Sprintf("[POST /confirm-use][%d] confirmNoContent  %+v", 204, o.Payload)
}

func (o *ConfirmNoContent) String() string {
	return fmt.Sprintf("[POST /confirm-use][%d] confirmNoContent  %+v", 204, o.Payload)
}

func (o *ConfirmNoContent) GetPayload() *models.Profile {
	return o.Payload
}

func (o *ConfirmNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Profile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfirmBadRequest creates a ConfirmBadRequest with default headers values
func NewConfirmBadRequest() *ConfirmBadRequest {
	return &ConfirmBadRequest{}
}

/*
ConfirmBadRequest describes a response with status code 400, with default header values.

Unable to confirm
*/
type ConfirmBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this confirm bad request response has a 2xx status code
func (o *ConfirmBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this confirm bad request response has a 3xx status code
func (o *ConfirmBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this confirm bad request response has a 4xx status code
func (o *ConfirmBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this confirm bad request response has a 5xx status code
func (o *ConfirmBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this confirm bad request response a status code equal to that given
func (o *ConfirmBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ConfirmBadRequest) Error() string {
	return fmt.Sprintf("[POST /confirm-use][%d] confirmBadRequest  %+v", 400, o.Payload)
}

func (o *ConfirmBadRequest) String() string {
	return fmt.Sprintf("[POST /confirm-use][%d] confirmBadRequest  %+v", 400, o.Payload)
}

func (o *ConfirmBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ConfirmBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfirmInternalServerError creates a ConfirmInternalServerError with default headers values
func NewConfirmInternalServerError() *ConfirmInternalServerError {
	return &ConfirmInternalServerError{}
}

/*
ConfirmInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type ConfirmInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this confirm internal server error response has a 2xx status code
func (o *ConfirmInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this confirm internal server error response has a 3xx status code
func (o *ConfirmInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this confirm internal server error response has a 4xx status code
func (o *ConfirmInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this confirm internal server error response has a 5xx status code
func (o *ConfirmInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this confirm internal server error response a status code equal to that given
func (o *ConfirmInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *ConfirmInternalServerError) Error() string {
	return fmt.Sprintf("[POST /confirm-use][%d] confirmInternalServerError  %+v", 500, o.Payload)
}

func (o *ConfirmInternalServerError) String() string {
	return fmt.Sprintf("[POST /confirm-use][%d] confirmInternalServerError  %+v", 500, o.Payload)
}

func (o *ConfirmInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ConfirmInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
