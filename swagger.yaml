swagger: "2.0"
info:
  description: "microservice for the bonus system of self-service car washes"
  title: wash-bonus
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
securityDefinitions:
  authKey:
    description: Session token inside Authorization header.
    type: apiKey
    in: header
    name: Authorization
security:
  - authKey: []
paths:
  /healthCheck:
    get:
      tags:
        - Standard
      security:
        - {}
      operationId: healthCheck 
      responses:        
        200:
          description: OK 
          schema:
            type: object
            properties:
              ok:
                type: boolean
  /addTestData:    
    post:
      tags:
        - Standard
      operationId: addTestData 
      responses:        
        200:
          description: OK 
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /balance/get:    
    post: 
      tags:
        - BonusBalance
      operationId: getBonusBalance
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/balance"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /balance/add:
    post: 
      tags:
        - BonusBalance
      operationId: addBonusBalance
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/balanceAdd" 
      responses:
        201:
          description: Created 
          schema:
            $ref: "#/definitions/balance"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /balance/edit:
    put: 
      tags:
        - BonusBalance
      operationId: editBonusBalance
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                 type: string
              data:
                $ref: "#/definitions/balanceAdd" 
      responses:
        200:
          description: OK
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /balance/deleted:
    delete: 
      tags:
        - BonusBalance
      operationId: deleteBonusBalance
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string
              user_id:
                type: string 
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /user:
    get:
      tags:
        - User
      operationId: getCurrentUser
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /user/{id}:
    get:
      tags:
        - User
      operationId: getUser
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/add:    
    post: 
      tags:
        - User
      operationId: addUser
      parameters:
        - name: body
          in: body
          schema:
                $ref: "#/definitions/userAdd" 
      responses:
        200:
          description: Created
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/{id}/edit:
    put:
      tags:
        - User
      operationId: editUser
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/userUpdate"
      responses:
        200:
          description: OK
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/{id}/delete:
    delete: 
      tags:
        - User
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /user/list:    
    post: 
      tags:
        - User
      operationId: listUser
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams" 
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              warnings:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  $ref: "#/definitions/user"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /washServer/get:    
    post: 
      tags:
        - WashServer
      operationId: getWashServer
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        200:
          description: OK
          schema:
                  $ref: "#/definitions/washServer"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /washServer/add:    
    post: 
      tags:
        - WashServer
      operationId: addWashServer
      parameters:
        - name: body
          in: body
          schema:
                $ref: "#/definitions/washServerAdd" 
      responses:
        201:
          description: Created 
          schema:
            $ref: "#/definitions/washServer"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /washServer/edit:    
    put: 
      tags:
        - WashServer
      operationId: editWashServer
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string
              data:
                $ref: "#/definitions/washServerAdd" 
      responses:
        200:
          description: OK
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /washServer/delete:    
    delete: 
      tags:
        - WashServer
      operationId: deleteWashServer
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              id:
                type: string 
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /washServer/list:    
    post: 
      tags:
        - WashServer
      operationId: listWashServer
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/listParams" 
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              warnings:
                type: array
                items:
                  type: string
              items:
                type: array
                items:
                  $ref: "#/definitions/washServer"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
definitions:
  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: Either same as HTTP Status Code OR >= 600.
        type: integer
        format: int32
      message:
        type: string
  user:
    type: object
    description: "user object"
    properties:
      id:
        type: string
      active:
        type: boolean
      createdAt:
        type: string
        format: date-time
        x-nullable: true
      firebaseId:
        type: string
      modifiedAt:
        type: string
        format: date-time
        x-nullable: true
  
  balance:
    type: object
    description: "bonus object"
    properties:
      id:
        type: string
      user_id:
        type: string
      balance:
        type: string

  balanceAdd:
    type: object
    description: "bonus model for add and edit methods"
    properties:
      balance:
        type: string
      user_id:
        type: string

  userAdd:
    type: object
    description: "user model for add method"
    properties:
      active:
        type: boolean
  
  userUpdate:
    type: object
    description: "user model for edit method"
    properties:
      active:
        type: boolean

  washServer:
    type: object
    description: "washServer object"
    properties:
      id:
        type: string
      createdAt:
        type: string
        format: date-time
        x-nullable: true
      key:
        type: string
      lastUpdateAt:
        type: string
        format: date-time
        x-nullable: true
      modifiedAt:
        type: string
        format: date-time
        x-nullable: true
      name:
        type: string
  washServerAdd:
    type: object
    description: "washServer model for add and edit methods"
    properties:
      key:
        type: string
      lastUpdateAt:
        type: string
        format: date-time
        x-nullable: true
      name:
        type: string
 


  listParams:
    type: object
    description: params for list method
    properties:
      limit:
        type: integer
        minimum: 1
      offset:
        type: integer
        minimum: 0
      filterGroups:
        type: array
        items:
          $ref: "#/definitions/filterGroup" 
      sortBy:
        type: string
      orderBy:
        type: string
        enum: [ASC, DESC]

  filterGroup:
    type: object
    description: params for grouping filters
    properties:
      key:
        type: string
      logicFilter:
        description: "Comparing option: true == 'AND', false == 'OR'"
        type: boolean
      filters:
        type: array
        items:
          $ref: "#/definitions/filter" 
      
  filter:
    type: object
    properties:
      value:
        type: string
      operator:
        description: "enum ==, !=, <, >, <=, >=, in, !in"
        type: string
      ignoreCase:
        type: boolean
