// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bonus system service for self-service car washes",
    "title": "wash-bonus",
    "version": "1.0.0"
  },
  "paths": {
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "csv",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organization"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "createOrganization",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "operationId": "updateOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/organizations/{organizationId}/users/{userId}": {
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "assignUserToOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "removeUserFromOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/server-groups": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServerGroup"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "post": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "createServerGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/server-groups/{groupId}": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroupById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "delete": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "deleteServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "patch": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "updateServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/server-groups/{groupId}/wash-servers/{serverId}": {
      "post": {
        "tags": [
          "washServers"
        ],
        "operationId": "assignServerToGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "getSessionById",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/sessions/{sessionId}/assign-user": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "assignUserToSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/sessions/{sessionId}/bonuses": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "chargeBonusesOnSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUserById",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "updateUserRole",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRoleUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/wallets": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWallets",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/wallets/by-organization/{id}": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWalletByOrganizationId",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/wash-servers/": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WashServer"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "createWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success creation",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    },
    "/wash-servers/{serverId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServerById",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "delete": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "deleteWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "updateWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "403": {
            "$ref": "#/responses/Forbidden"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "500": {
            "$ref": "#/responses/InternalError"
          }
        }
      }
    }
  },
  "definitions": {
    "BonusCharge": {
      "description": "bonus amount for use in session",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OrganizationCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OrganizationUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64",
          "maximum": 100
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServerGroup": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServerGroupCreation": {
      "required": [
        "name",
        "description",
        "organizationId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServerGroupUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Session": {
      "description": "session",
      "type": "object",
      "properties": {
        "postBalance": {
          "type": "integer"
        },
        "postID": {
          "type": "integer"
        },
        "washServer": {
          "$ref": "#/definitions/WashServer"
        }
      }
    },
    "User": {
      "description": "user profile",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "organizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "x-omitempty": true
        },
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "engineer"
          ]
        }
      }
    },
    "UserRoleUpdate": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "engineer"
          ]
        }
      }
    },
    "Wallet": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "integer",
          "x-omitempty": false
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "pendingBalance": {
          "type": "integer",
          "x-omitempty": false
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "WashServer": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceKey": {
          "type": "string"
        }
      }
    },
    "WashServerCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "WashServerUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "BadRequest": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "Forbidden": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "InternalError": {
      "description": "Internal error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bonus system service for self-service car washes",
    "title": "wash-bonus",
    "version": "1.0.0"
  },
  "paths": {
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          },
          {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "csv",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Organization"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "createOrganization",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "operationId": "getOrganizationById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "deleteOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "operationId": "updateOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrganizationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/users/{userId}": {
      "post": {
        "tags": [
          "organizations"
        ],
        "operationId": "assignUserToOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "operationId": "removeUserFromOrganization",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server-groups": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServerGroup"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "createServerGroup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull created",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server-groups/{groupId}": {
      "get": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "getServerGroupById",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "deleteServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "serverGroups"
        ],
        "operationId": "updateServerGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ServerGroupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfull updated",
            "schema": {
              "$ref": "#/definitions/ServerGroup"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/server-groups/{groupId}/wash-servers/{serverId}": {
      "post": {
        "tags": [
          "washServers"
        ],
        "operationId": "assignServerToGroup",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "getSessionById",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/assign-user": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "assignUserToSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/bonuses": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "chargeBonusesOnSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUsers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUserById",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "updateUserRole",
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRoleUpdate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wallets": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWallets",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wallets/by-organization/{id}": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWalletByOrganizationId",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wash-servers/": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServers",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pagination"
            }
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "organizationId",
            "in": "query"
          },
          {
            "type": "string",
            "format": "uuid",
            "name": "groupId",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WashServer"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "createWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerCreation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success creation",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wash-servers/{serverId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "getWashServerById",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "deleteWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "washServers"
        ],
        "operationId": "updateWashServer",
        "parameters": [
          {
            "type": "string",
            "name": "serverId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WashServerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success update",
            "schema": {
              "$ref": "#/definitions/WashServer"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BonusCharge": {
      "description": "bonus amount for use in session",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OrganizationCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OrganizationUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64",
          "maximum": 100
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServerGroup": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServerGroupCreation": {
      "required": [
        "name",
        "description",
        "organizationId"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ServerGroupUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Session": {
      "description": "session",
      "type": "object",
      "properties": {
        "postBalance": {
          "type": "integer"
        },
        "postID": {
          "type": "integer"
        },
        "washServer": {
          "$ref": "#/definitions/WashServer"
        }
      }
    },
    "User": {
      "description": "user profile",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "organizationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "x-omitempty": true
        },
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "engineer"
          ]
        }
      }
    },
    "UserRoleUpdate": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "user",
            "admin",
            "engineer"
          ]
        }
      }
    },
    "Wallet": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "integer",
          "x-omitempty": false
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "pendingBalance": {
          "type": "integer",
          "x-omitempty": false
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "WashServer": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        },
        "serviceKey": {
          "type": "string"
        }
      }
    },
    "WashServerCreation": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "WashServerUpdate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "BadRequest": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "Forbidden": {
      "description": "Forbidden",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "InternalError": {
      "description": "Internal error",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
}
