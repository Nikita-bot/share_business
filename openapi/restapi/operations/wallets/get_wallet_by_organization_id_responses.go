// Code generated by go-swagger; DO NOT EDIT.

package wallets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetWalletByOrganizationIDOKCode is the HTTP code returned for type GetWalletByOrganizationIDOK
const GetWalletByOrganizationIDOKCode int = 200

/*
GetWalletByOrganizationIDOK OK

swagger:response getWalletByOrganizationIdOK
*/
type GetWalletByOrganizationIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Wallet `json:"body,omitempty"`
}

// NewGetWalletByOrganizationIDOK creates GetWalletByOrganizationIDOK with default headers values
func NewGetWalletByOrganizationIDOK() *GetWalletByOrganizationIDOK {

	return &GetWalletByOrganizationIDOK{}
}

// WithPayload adds the payload to the get wallet by organization Id o k response
func (o *GetWalletByOrganizationIDOK) WithPayload(payload *models.Wallet) *GetWalletByOrganizationIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallet by organization Id o k response
func (o *GetWalletByOrganizationIDOK) SetPayload(payload *models.Wallet) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletByOrganizationIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletByOrganizationIDOK) GetWalletByOrganizationIDResponder() {}

// GetWalletByOrganizationIDBadRequestCode is the HTTP code returned for type GetWalletByOrganizationIDBadRequest
const GetWalletByOrganizationIDBadRequestCode int = 400

/*
GetWalletByOrganizationIDBadRequest Bad request

swagger:response getWalletByOrganizationIdBadRequest
*/
type GetWalletByOrganizationIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWalletByOrganizationIDBadRequest creates GetWalletByOrganizationIDBadRequest with default headers values
func NewGetWalletByOrganizationIDBadRequest() *GetWalletByOrganizationIDBadRequest {

	return &GetWalletByOrganizationIDBadRequest{}
}

// WithPayload adds the payload to the get wallet by organization Id bad request response
func (o *GetWalletByOrganizationIDBadRequest) WithPayload(payload *models.Error) *GetWalletByOrganizationIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallet by organization Id bad request response
func (o *GetWalletByOrganizationIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletByOrganizationIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletByOrganizationIDBadRequest) GetWalletByOrganizationIDResponder() {}

// GetWalletByOrganizationIDForbiddenCode is the HTTP code returned for type GetWalletByOrganizationIDForbidden
const GetWalletByOrganizationIDForbiddenCode int = 403

/*
GetWalletByOrganizationIDForbidden Forbidden

swagger:response getWalletByOrganizationIdForbidden
*/
type GetWalletByOrganizationIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWalletByOrganizationIDForbidden creates GetWalletByOrganizationIDForbidden with default headers values
func NewGetWalletByOrganizationIDForbidden() *GetWalletByOrganizationIDForbidden {

	return &GetWalletByOrganizationIDForbidden{}
}

// WithPayload adds the payload to the get wallet by organization Id forbidden response
func (o *GetWalletByOrganizationIDForbidden) WithPayload(payload *models.Error) *GetWalletByOrganizationIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallet by organization Id forbidden response
func (o *GetWalletByOrganizationIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletByOrganizationIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletByOrganizationIDForbidden) GetWalletByOrganizationIDResponder() {}

// GetWalletByOrganizationIDNotFoundCode is the HTTP code returned for type GetWalletByOrganizationIDNotFound
const GetWalletByOrganizationIDNotFoundCode int = 404

/*
GetWalletByOrganizationIDNotFound Not Found

swagger:response getWalletByOrganizationIdNotFound
*/
type GetWalletByOrganizationIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWalletByOrganizationIDNotFound creates GetWalletByOrganizationIDNotFound with default headers values
func NewGetWalletByOrganizationIDNotFound() *GetWalletByOrganizationIDNotFound {

	return &GetWalletByOrganizationIDNotFound{}
}

// WithPayload adds the payload to the get wallet by organization Id not found response
func (o *GetWalletByOrganizationIDNotFound) WithPayload(payload *models.Error) *GetWalletByOrganizationIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallet by organization Id not found response
func (o *GetWalletByOrganizationIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletByOrganizationIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletByOrganizationIDNotFound) GetWalletByOrganizationIDResponder() {}

// GetWalletByOrganizationIDInternalServerErrorCode is the HTTP code returned for type GetWalletByOrganizationIDInternalServerError
const GetWalletByOrganizationIDInternalServerErrorCode int = 500

/*
GetWalletByOrganizationIDInternalServerError Internal error

swagger:response getWalletByOrganizationIdInternalServerError
*/
type GetWalletByOrganizationIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWalletByOrganizationIDInternalServerError creates GetWalletByOrganizationIDInternalServerError with default headers values
func NewGetWalletByOrganizationIDInternalServerError() *GetWalletByOrganizationIDInternalServerError {

	return &GetWalletByOrganizationIDInternalServerError{}
}

// WithPayload adds the payload to the get wallet by organization Id internal server error response
func (o *GetWalletByOrganizationIDInternalServerError) WithPayload(payload *models.Error) *GetWalletByOrganizationIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wallet by organization Id internal server error response
func (o *GetWalletByOrganizationIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWalletByOrganizationIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWalletByOrganizationIDInternalServerError) GetWalletByOrganizationIDResponder() {}

type GetWalletByOrganizationIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWalletByOrganizationIDNotImplementedResponder) GetWalletByOrganizationIDResponder() {}

func GetWalletByOrganizationIDNotImplemented() GetWalletByOrganizationIDResponder {
	return &GetWalletByOrganizationIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWalletByOrganizationID has not yet been implemented",
		),
	}
}

type GetWalletByOrganizationIDResponder interface {
	middleware.Responder
	GetWalletByOrganizationIDResponder()
}
