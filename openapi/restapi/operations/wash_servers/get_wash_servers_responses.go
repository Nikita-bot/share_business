// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetWashServersOKCode is the HTTP code returned for type GetWashServersOK
const GetWashServersOKCode int = 200

/*
GetWashServersOK OK

swagger:response getWashServersOK
*/
type GetWashServersOK struct {

	/*
	  In: Body
	*/
	Payload []*models.WashServer `json:"body,omitempty"`
}

// NewGetWashServersOK creates GetWashServersOK with default headers values
func NewGetWashServersOK() *GetWashServersOK {

	return &GetWashServersOK{}
}

// WithPayload adds the payload to the get wash servers o k response
func (o *GetWashServersOK) WithPayload(payload []*models.WashServer) *GetWashServersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash servers o k response
func (o *GetWashServersOK) SetPayload(payload []*models.WashServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.WashServer, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetWashServersOK) GetWashServersResponder() {}

// GetWashServersBadRequestCode is the HTTP code returned for type GetWashServersBadRequest
const GetWashServersBadRequestCode int = 400

/*
GetWashServersBadRequest Bad request

swagger:response getWashServersBadRequest
*/
type GetWashServersBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServersBadRequest creates GetWashServersBadRequest with default headers values
func NewGetWashServersBadRequest() *GetWashServersBadRequest {

	return &GetWashServersBadRequest{}
}

// WithPayload adds the payload to the get wash servers bad request response
func (o *GetWashServersBadRequest) WithPayload(payload *models.Error) *GetWashServersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash servers bad request response
func (o *GetWashServersBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServersBadRequest) GetWashServersResponder() {}

// GetWashServersForbiddenCode is the HTTP code returned for type GetWashServersForbidden
const GetWashServersForbiddenCode int = 403

/*
GetWashServersForbidden Forbidden

swagger:response getWashServersForbidden
*/
type GetWashServersForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServersForbidden creates GetWashServersForbidden with default headers values
func NewGetWashServersForbidden() *GetWashServersForbidden {

	return &GetWashServersForbidden{}
}

// WithPayload adds the payload to the get wash servers forbidden response
func (o *GetWashServersForbidden) WithPayload(payload *models.Error) *GetWashServersForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash servers forbidden response
func (o *GetWashServersForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServersForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServersForbidden) GetWashServersResponder() {}

// GetWashServersInternalServerErrorCode is the HTTP code returned for type GetWashServersInternalServerError
const GetWashServersInternalServerErrorCode int = 500

/*
GetWashServersInternalServerError Internal error

swagger:response getWashServersInternalServerError
*/
type GetWashServersInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServersInternalServerError creates GetWashServersInternalServerError with default headers values
func NewGetWashServersInternalServerError() *GetWashServersInternalServerError {

	return &GetWashServersInternalServerError{}
}

// WithPayload adds the payload to the get wash servers internal server error response
func (o *GetWashServersInternalServerError) WithPayload(payload *models.Error) *GetWashServersInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash servers internal server error response
func (o *GetWashServersInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServersInternalServerError) GetWashServersResponder() {}

type GetWashServersNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWashServersNotImplementedResponder) GetWashServersResponder() {}

func GetWashServersNotImplemented() GetWashServersResponder {
	return &GetWashServersNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWashServers has not yet been implemented",
		),
	}
}

type GetWashServersResponder interface {
	middleware.Responder
	GetWashServersResponder()
}
