// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetSessionByIDOKCode is the HTTP code returned for type GetSessionByIDOK
const GetSessionByIDOKCode int = 200

/*
GetSessionByIDOK OK

swagger:response getSessionByIdOK
*/
type GetSessionByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Session `json:"body,omitempty"`
}

// NewGetSessionByIDOK creates GetSessionByIDOK with default headers values
func NewGetSessionByIDOK() *GetSessionByIDOK {

	return &GetSessionByIDOK{}
}

// WithPayload adds the payload to the get session by Id o k response
func (o *GetSessionByIDOK) WithPayload(payload *models.Session) *GetSessionByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session by Id o k response
func (o *GetSessionByIDOK) SetPayload(payload *models.Session) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionByIDOK) GetSessionByIDResponder() {}

// GetSessionByIDBadRequestCode is the HTTP code returned for type GetSessionByIDBadRequest
const GetSessionByIDBadRequestCode int = 400

/*
GetSessionByIDBadRequest Bad request

swagger:response getSessionByIdBadRequest
*/
type GetSessionByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSessionByIDBadRequest creates GetSessionByIDBadRequest with default headers values
func NewGetSessionByIDBadRequest() *GetSessionByIDBadRequest {

	return &GetSessionByIDBadRequest{}
}

// WithPayload adds the payload to the get session by Id bad request response
func (o *GetSessionByIDBadRequest) WithPayload(payload *models.Error) *GetSessionByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session by Id bad request response
func (o *GetSessionByIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionByIDBadRequest) GetSessionByIDResponder() {}

// GetSessionByIDForbiddenCode is the HTTP code returned for type GetSessionByIDForbidden
const GetSessionByIDForbiddenCode int = 403

/*
GetSessionByIDForbidden Forbidden

swagger:response getSessionByIdForbidden
*/
type GetSessionByIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSessionByIDForbidden creates GetSessionByIDForbidden with default headers values
func NewGetSessionByIDForbidden() *GetSessionByIDForbidden {

	return &GetSessionByIDForbidden{}
}

// WithPayload adds the payload to the get session by Id forbidden response
func (o *GetSessionByIDForbidden) WithPayload(payload *models.Error) *GetSessionByIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session by Id forbidden response
func (o *GetSessionByIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionByIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionByIDForbidden) GetSessionByIDResponder() {}

// GetSessionByIDNotFoundCode is the HTTP code returned for type GetSessionByIDNotFound
const GetSessionByIDNotFoundCode int = 404

/*
GetSessionByIDNotFound Not Found

swagger:response getSessionByIdNotFound
*/
type GetSessionByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSessionByIDNotFound creates GetSessionByIDNotFound with default headers values
func NewGetSessionByIDNotFound() *GetSessionByIDNotFound {

	return &GetSessionByIDNotFound{}
}

// WithPayload adds the payload to the get session by Id not found response
func (o *GetSessionByIDNotFound) WithPayload(payload *models.Error) *GetSessionByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session by Id not found response
func (o *GetSessionByIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionByIDNotFound) GetSessionByIDResponder() {}

// GetSessionByIDInternalServerErrorCode is the HTTP code returned for type GetSessionByIDInternalServerError
const GetSessionByIDInternalServerErrorCode int = 500

/*
GetSessionByIDInternalServerError Internal error

swagger:response getSessionByIdInternalServerError
*/
type GetSessionByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSessionByIDInternalServerError creates GetSessionByIDInternalServerError with default headers values
func NewGetSessionByIDInternalServerError() *GetSessionByIDInternalServerError {

	return &GetSessionByIDInternalServerError{}
}

// WithPayload adds the payload to the get session by Id internal server error response
func (o *GetSessionByIDInternalServerError) WithPayload(payload *models.Error) *GetSessionByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session by Id internal server error response
func (o *GetSessionByIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSessionByIDInternalServerError) GetSessionByIDResponder() {}

type GetSessionByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetSessionByIDNotImplementedResponder) GetSessionByIDResponder() {}

func GetSessionByIDNotImplemented() GetSessionByIDResponder {
	return &GetSessionByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetSessionByID has not yet been implemented",
		),
	}
}

type GetSessionByIDResponder interface {
	middleware.Responder
	GetSessionByIDResponder()
}
