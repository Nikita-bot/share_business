// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetServerGroupByIDOKCode is the HTTP code returned for type GetServerGroupByIDOK
const GetServerGroupByIDOKCode int = 200

/*
GetServerGroupByIDOK OK

swagger:response getServerGroupByIdOK
*/
type GetServerGroupByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServerGroup `json:"body,omitempty"`
}

// NewGetServerGroupByIDOK creates GetServerGroupByIDOK with default headers values
func NewGetServerGroupByIDOK() *GetServerGroupByIDOK {

	return &GetServerGroupByIDOK{}
}

// WithPayload adds the payload to the get server group by Id o k response
func (o *GetServerGroupByIDOK) WithPayload(payload *models.ServerGroup) *GetServerGroupByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server group by Id o k response
func (o *GetServerGroupByIDOK) SetPayload(payload *models.ServerGroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupByIDOK) GetServerGroupByIDResponder() {}

// GetServerGroupByIDBadRequestCode is the HTTP code returned for type GetServerGroupByIDBadRequest
const GetServerGroupByIDBadRequestCode int = 400

/*
GetServerGroupByIDBadRequest Bad request

swagger:response getServerGroupByIdBadRequest
*/
type GetServerGroupByIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServerGroupByIDBadRequest creates GetServerGroupByIDBadRequest with default headers values
func NewGetServerGroupByIDBadRequest() *GetServerGroupByIDBadRequest {

	return &GetServerGroupByIDBadRequest{}
}

// WithPayload adds the payload to the get server group by Id bad request response
func (o *GetServerGroupByIDBadRequest) WithPayload(payload *models.Error) *GetServerGroupByIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server group by Id bad request response
func (o *GetServerGroupByIDBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupByIDBadRequest) GetServerGroupByIDResponder() {}

// GetServerGroupByIDForbiddenCode is the HTTP code returned for type GetServerGroupByIDForbidden
const GetServerGroupByIDForbiddenCode int = 403

/*
GetServerGroupByIDForbidden Forbidden

swagger:response getServerGroupByIdForbidden
*/
type GetServerGroupByIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServerGroupByIDForbidden creates GetServerGroupByIDForbidden with default headers values
func NewGetServerGroupByIDForbidden() *GetServerGroupByIDForbidden {

	return &GetServerGroupByIDForbidden{}
}

// WithPayload adds the payload to the get server group by Id forbidden response
func (o *GetServerGroupByIDForbidden) WithPayload(payload *models.Error) *GetServerGroupByIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server group by Id forbidden response
func (o *GetServerGroupByIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupByIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupByIDForbidden) GetServerGroupByIDResponder() {}

// GetServerGroupByIDNotFoundCode is the HTTP code returned for type GetServerGroupByIDNotFound
const GetServerGroupByIDNotFoundCode int = 404

/*
GetServerGroupByIDNotFound Not Found

swagger:response getServerGroupByIdNotFound
*/
type GetServerGroupByIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServerGroupByIDNotFound creates GetServerGroupByIDNotFound with default headers values
func NewGetServerGroupByIDNotFound() *GetServerGroupByIDNotFound {

	return &GetServerGroupByIDNotFound{}
}

// WithPayload adds the payload to the get server group by Id not found response
func (o *GetServerGroupByIDNotFound) WithPayload(payload *models.Error) *GetServerGroupByIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server group by Id not found response
func (o *GetServerGroupByIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupByIDNotFound) GetServerGroupByIDResponder() {}

// GetServerGroupByIDInternalServerErrorCode is the HTTP code returned for type GetServerGroupByIDInternalServerError
const GetServerGroupByIDInternalServerErrorCode int = 500

/*
GetServerGroupByIDInternalServerError Internal error

swagger:response getServerGroupByIdInternalServerError
*/
type GetServerGroupByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServerGroupByIDInternalServerError creates GetServerGroupByIDInternalServerError with default headers values
func NewGetServerGroupByIDInternalServerError() *GetServerGroupByIDInternalServerError {

	return &GetServerGroupByIDInternalServerError{}
}

// WithPayload adds the payload to the get server group by Id internal server error response
func (o *GetServerGroupByIDInternalServerError) WithPayload(payload *models.Error) *GetServerGroupByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get server group by Id internal server error response
func (o *GetServerGroupByIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServerGroupByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetServerGroupByIDInternalServerError) GetServerGroupByIDResponder() {}

type GetServerGroupByIDNotImplementedResponder struct {
	middleware.Responder
}

func (*GetServerGroupByIDNotImplementedResponder) GetServerGroupByIDResponder() {}

func GetServerGroupByIDNotImplemented() GetServerGroupByIDResponder {
	return &GetServerGroupByIDNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetServerGroupByID has not yet been implemented",
		),
	}
}

type GetServerGroupByIDResponder interface {
	middleware.Responder
	GetServerGroupByIDResponder()
}
