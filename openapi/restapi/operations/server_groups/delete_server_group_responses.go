// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// DeleteServerGroupNoContentCode is the HTTP code returned for type DeleteServerGroupNoContent
const DeleteServerGroupNoContentCode int = 204

/*
DeleteServerGroupNoContent OK

swagger:response deleteServerGroupNoContent
*/
type DeleteServerGroupNoContent struct {
}

// NewDeleteServerGroupNoContent creates DeleteServerGroupNoContent with default headers values
func NewDeleteServerGroupNoContent() *DeleteServerGroupNoContent {

	return &DeleteServerGroupNoContent{}
}

// WriteResponse to the client
func (o *DeleteServerGroupNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *DeleteServerGroupNoContent) DeleteServerGroupResponder() {}

// DeleteServerGroupBadRequestCode is the HTTP code returned for type DeleteServerGroupBadRequest
const DeleteServerGroupBadRequestCode int = 400

/*
DeleteServerGroupBadRequest Bad request

swagger:response deleteServerGroupBadRequest
*/
type DeleteServerGroupBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServerGroupBadRequest creates DeleteServerGroupBadRequest with default headers values
func NewDeleteServerGroupBadRequest() *DeleteServerGroupBadRequest {

	return &DeleteServerGroupBadRequest{}
}

// WithPayload adds the payload to the delete server group bad request response
func (o *DeleteServerGroupBadRequest) WithPayload(payload *models.Error) *DeleteServerGroupBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete server group bad request response
func (o *DeleteServerGroupBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServerGroupBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DeleteServerGroupBadRequest) DeleteServerGroupResponder() {}

// DeleteServerGroupForbiddenCode is the HTTP code returned for type DeleteServerGroupForbidden
const DeleteServerGroupForbiddenCode int = 403

/*
DeleteServerGroupForbidden Forbidden

swagger:response deleteServerGroupForbidden
*/
type DeleteServerGroupForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServerGroupForbidden creates DeleteServerGroupForbidden with default headers values
func NewDeleteServerGroupForbidden() *DeleteServerGroupForbidden {

	return &DeleteServerGroupForbidden{}
}

// WithPayload adds the payload to the delete server group forbidden response
func (o *DeleteServerGroupForbidden) WithPayload(payload *models.Error) *DeleteServerGroupForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete server group forbidden response
func (o *DeleteServerGroupForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServerGroupForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DeleteServerGroupForbidden) DeleteServerGroupResponder() {}

// DeleteServerGroupNotFoundCode is the HTTP code returned for type DeleteServerGroupNotFound
const DeleteServerGroupNotFoundCode int = 404

/*
DeleteServerGroupNotFound Not Found

swagger:response deleteServerGroupNotFound
*/
type DeleteServerGroupNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServerGroupNotFound creates DeleteServerGroupNotFound with default headers values
func NewDeleteServerGroupNotFound() *DeleteServerGroupNotFound {

	return &DeleteServerGroupNotFound{}
}

// WithPayload adds the payload to the delete server group not found response
func (o *DeleteServerGroupNotFound) WithPayload(payload *models.Error) *DeleteServerGroupNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete server group not found response
func (o *DeleteServerGroupNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServerGroupNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DeleteServerGroupNotFound) DeleteServerGroupResponder() {}

// DeleteServerGroupInternalServerErrorCode is the HTTP code returned for type DeleteServerGroupInternalServerError
const DeleteServerGroupInternalServerErrorCode int = 500

/*
DeleteServerGroupInternalServerError Internal error

swagger:response deleteServerGroupInternalServerError
*/
type DeleteServerGroupInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServerGroupInternalServerError creates DeleteServerGroupInternalServerError with default headers values
func NewDeleteServerGroupInternalServerError() *DeleteServerGroupInternalServerError {

	return &DeleteServerGroupInternalServerError{}
}

// WithPayload adds the payload to the delete server group internal server error response
func (o *DeleteServerGroupInternalServerError) WithPayload(payload *models.Error) *DeleteServerGroupInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete server group internal server error response
func (o *DeleteServerGroupInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServerGroupInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DeleteServerGroupInternalServerError) DeleteServerGroupResponder() {}

type DeleteServerGroupNotImplementedResponder struct {
	middleware.Responder
}

func (*DeleteServerGroupNotImplementedResponder) DeleteServerGroupResponder() {}

func DeleteServerGroupNotImplemented() DeleteServerGroupResponder {
	return &DeleteServerGroupNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.DeleteServerGroup has not yet been implemented",
		),
	}
}

type DeleteServerGroupResponder interface {
	middleware.Responder
	DeleteServerGroupResponder()
}
