// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// AssignUserToOrganizationNoContentCode is the HTTP code returned for type AssignUserToOrganizationNoContent
const AssignUserToOrganizationNoContentCode int = 204

/*
AssignUserToOrganizationNoContent OK

swagger:response assignUserToOrganizationNoContent
*/
type AssignUserToOrganizationNoContent struct {
}

// NewAssignUserToOrganizationNoContent creates AssignUserToOrganizationNoContent with default headers values
func NewAssignUserToOrganizationNoContent() *AssignUserToOrganizationNoContent {

	return &AssignUserToOrganizationNoContent{}
}

// WriteResponse to the client
func (o *AssignUserToOrganizationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *AssignUserToOrganizationNoContent) AssignUserToOrganizationResponder() {}

// AssignUserToOrganizationBadRequestCode is the HTTP code returned for type AssignUserToOrganizationBadRequest
const AssignUserToOrganizationBadRequestCode int = 400

/*
AssignUserToOrganizationBadRequest Bad request

swagger:response assignUserToOrganizationBadRequest
*/
type AssignUserToOrganizationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAssignUserToOrganizationBadRequest creates AssignUserToOrganizationBadRequest with default headers values
func NewAssignUserToOrganizationBadRequest() *AssignUserToOrganizationBadRequest {

	return &AssignUserToOrganizationBadRequest{}
}

// WithPayload adds the payload to the assign user to organization bad request response
func (o *AssignUserToOrganizationBadRequest) WithPayload(payload *models.Error) *AssignUserToOrganizationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the assign user to organization bad request response
func (o *AssignUserToOrganizationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AssignUserToOrganizationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *AssignUserToOrganizationBadRequest) AssignUserToOrganizationResponder() {}

// AssignUserToOrganizationForbiddenCode is the HTTP code returned for type AssignUserToOrganizationForbidden
const AssignUserToOrganizationForbiddenCode int = 403

/*
AssignUserToOrganizationForbidden Forbidden

swagger:response assignUserToOrganizationForbidden
*/
type AssignUserToOrganizationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAssignUserToOrganizationForbidden creates AssignUserToOrganizationForbidden with default headers values
func NewAssignUserToOrganizationForbidden() *AssignUserToOrganizationForbidden {

	return &AssignUserToOrganizationForbidden{}
}

// WithPayload adds the payload to the assign user to organization forbidden response
func (o *AssignUserToOrganizationForbidden) WithPayload(payload *models.Error) *AssignUserToOrganizationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the assign user to organization forbidden response
func (o *AssignUserToOrganizationForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AssignUserToOrganizationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *AssignUserToOrganizationForbidden) AssignUserToOrganizationResponder() {}

// AssignUserToOrganizationNotFoundCode is the HTTP code returned for type AssignUserToOrganizationNotFound
const AssignUserToOrganizationNotFoundCode int = 404

/*
AssignUserToOrganizationNotFound Not Found

swagger:response assignUserToOrganizationNotFound
*/
type AssignUserToOrganizationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAssignUserToOrganizationNotFound creates AssignUserToOrganizationNotFound with default headers values
func NewAssignUserToOrganizationNotFound() *AssignUserToOrganizationNotFound {

	return &AssignUserToOrganizationNotFound{}
}

// WithPayload adds the payload to the assign user to organization not found response
func (o *AssignUserToOrganizationNotFound) WithPayload(payload *models.Error) *AssignUserToOrganizationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the assign user to organization not found response
func (o *AssignUserToOrganizationNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AssignUserToOrganizationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *AssignUserToOrganizationNotFound) AssignUserToOrganizationResponder() {}

// AssignUserToOrganizationInternalServerErrorCode is the HTTP code returned for type AssignUserToOrganizationInternalServerError
const AssignUserToOrganizationInternalServerErrorCode int = 500

/*
AssignUserToOrganizationInternalServerError Internal error

swagger:response assignUserToOrganizationInternalServerError
*/
type AssignUserToOrganizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAssignUserToOrganizationInternalServerError creates AssignUserToOrganizationInternalServerError with default headers values
func NewAssignUserToOrganizationInternalServerError() *AssignUserToOrganizationInternalServerError {

	return &AssignUserToOrganizationInternalServerError{}
}

// WithPayload adds the payload to the assign user to organization internal server error response
func (o *AssignUserToOrganizationInternalServerError) WithPayload(payload *models.Error) *AssignUserToOrganizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the assign user to organization internal server error response
func (o *AssignUserToOrganizationInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AssignUserToOrganizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *AssignUserToOrganizationInternalServerError) AssignUserToOrganizationResponder() {}

type AssignUserToOrganizationNotImplementedResponder struct {
	middleware.Responder
}

func (*AssignUserToOrganizationNotImplementedResponder) AssignUserToOrganizationResponder() {}

func AssignUserToOrganizationNotImplemented() AssignUserToOrganizationResponder {
	return &AssignUserToOrganizationNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.AssignUserToOrganization has not yet been implemented",
		),
	}
}

type AssignUserToOrganizationResponder interface {
	middleware.Responder
	AssignUserToOrganizationResponder()
}
