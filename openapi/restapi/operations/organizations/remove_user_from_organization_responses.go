// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// RemoveUserFromOrganizationNoContentCode is the HTTP code returned for type RemoveUserFromOrganizationNoContent
const RemoveUserFromOrganizationNoContentCode int = 204

/*
RemoveUserFromOrganizationNoContent OK

swagger:response removeUserFromOrganizationNoContent
*/
type RemoveUserFromOrganizationNoContent struct {
}

// NewRemoveUserFromOrganizationNoContent creates RemoveUserFromOrganizationNoContent with default headers values
func NewRemoveUserFromOrganizationNoContent() *RemoveUserFromOrganizationNoContent {

	return &RemoveUserFromOrganizationNoContent{}
}

// WriteResponse to the client
func (o *RemoveUserFromOrganizationNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *RemoveUserFromOrganizationNoContent) RemoveUserFromOrganizationResponder() {}

// RemoveUserFromOrganizationBadRequestCode is the HTTP code returned for type RemoveUserFromOrganizationBadRequest
const RemoveUserFromOrganizationBadRequestCode int = 400

/*
RemoveUserFromOrganizationBadRequest Bad request

swagger:response removeUserFromOrganizationBadRequest
*/
type RemoveUserFromOrganizationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveUserFromOrganizationBadRequest creates RemoveUserFromOrganizationBadRequest with default headers values
func NewRemoveUserFromOrganizationBadRequest() *RemoveUserFromOrganizationBadRequest {

	return &RemoveUserFromOrganizationBadRequest{}
}

// WithPayload adds the payload to the remove user from organization bad request response
func (o *RemoveUserFromOrganizationBadRequest) WithPayload(payload *models.Error) *RemoveUserFromOrganizationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove user from organization bad request response
func (o *RemoveUserFromOrganizationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveUserFromOrganizationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *RemoveUserFromOrganizationBadRequest) RemoveUserFromOrganizationResponder() {}

// RemoveUserFromOrganizationForbiddenCode is the HTTP code returned for type RemoveUserFromOrganizationForbidden
const RemoveUserFromOrganizationForbiddenCode int = 403

/*
RemoveUserFromOrganizationForbidden Forbidden

swagger:response removeUserFromOrganizationForbidden
*/
type RemoveUserFromOrganizationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveUserFromOrganizationForbidden creates RemoveUserFromOrganizationForbidden with default headers values
func NewRemoveUserFromOrganizationForbidden() *RemoveUserFromOrganizationForbidden {

	return &RemoveUserFromOrganizationForbidden{}
}

// WithPayload adds the payload to the remove user from organization forbidden response
func (o *RemoveUserFromOrganizationForbidden) WithPayload(payload *models.Error) *RemoveUserFromOrganizationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove user from organization forbidden response
func (o *RemoveUserFromOrganizationForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveUserFromOrganizationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *RemoveUserFromOrganizationForbidden) RemoveUserFromOrganizationResponder() {}

// RemoveUserFromOrganizationNotFoundCode is the HTTP code returned for type RemoveUserFromOrganizationNotFound
const RemoveUserFromOrganizationNotFoundCode int = 404

/*
RemoveUserFromOrganizationNotFound Not Found

swagger:response removeUserFromOrganizationNotFound
*/
type RemoveUserFromOrganizationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveUserFromOrganizationNotFound creates RemoveUserFromOrganizationNotFound with default headers values
func NewRemoveUserFromOrganizationNotFound() *RemoveUserFromOrganizationNotFound {

	return &RemoveUserFromOrganizationNotFound{}
}

// WithPayload adds the payload to the remove user from organization not found response
func (o *RemoveUserFromOrganizationNotFound) WithPayload(payload *models.Error) *RemoveUserFromOrganizationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove user from organization not found response
func (o *RemoveUserFromOrganizationNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveUserFromOrganizationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *RemoveUserFromOrganizationNotFound) RemoveUserFromOrganizationResponder() {}

// RemoveUserFromOrganizationInternalServerErrorCode is the HTTP code returned for type RemoveUserFromOrganizationInternalServerError
const RemoveUserFromOrganizationInternalServerErrorCode int = 500

/*
RemoveUserFromOrganizationInternalServerError Internal error

swagger:response removeUserFromOrganizationInternalServerError
*/
type RemoveUserFromOrganizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRemoveUserFromOrganizationInternalServerError creates RemoveUserFromOrganizationInternalServerError with default headers values
func NewRemoveUserFromOrganizationInternalServerError() *RemoveUserFromOrganizationInternalServerError {

	return &RemoveUserFromOrganizationInternalServerError{}
}

// WithPayload adds the payload to the remove user from organization internal server error response
func (o *RemoveUserFromOrganizationInternalServerError) WithPayload(payload *models.Error) *RemoveUserFromOrganizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the remove user from organization internal server error response
func (o *RemoveUserFromOrganizationInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RemoveUserFromOrganizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *RemoveUserFromOrganizationInternalServerError) RemoveUserFromOrganizationResponder() {}

type RemoveUserFromOrganizationNotImplementedResponder struct {
	middleware.Responder
}

func (*RemoveUserFromOrganizationNotImplementedResponder) RemoveUserFromOrganizationResponder() {}

func RemoveUserFromOrganizationNotImplemented() RemoveUserFromOrganizationResponder {
	return &RemoveUserFromOrganizationNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.RemoveUserFromOrganization has not yet been implemented",
		),
	}
}

type RemoveUserFromOrganizationResponder interface {
	middleware.Responder
	RemoveUserFromOrganizationResponder()
}
