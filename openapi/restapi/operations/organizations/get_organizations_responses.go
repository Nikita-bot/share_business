// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetOrganizationsOKCode is the HTTP code returned for type GetOrganizationsOK
const GetOrganizationsOKCode int = 200

/*
GetOrganizationsOK OK

swagger:response getOrganizationsOK
*/
type GetOrganizationsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Organization `json:"body,omitempty"`
}

// NewGetOrganizationsOK creates GetOrganizationsOK with default headers values
func NewGetOrganizationsOK() *GetOrganizationsOK {

	return &GetOrganizationsOK{}
}

// WithPayload adds the payload to the get organizations o k response
func (o *GetOrganizationsOK) WithPayload(payload []*models.Organization) *GetOrganizationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organizations o k response
func (o *GetOrganizationsOK) SetPayload(payload []*models.Organization) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Organization, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetOrganizationsOK) GetOrganizationsResponder() {}

// GetOrganizationsBadRequestCode is the HTTP code returned for type GetOrganizationsBadRequest
const GetOrganizationsBadRequestCode int = 400

/*
GetOrganizationsBadRequest Bad request

swagger:response getOrganizationsBadRequest
*/
type GetOrganizationsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOrganizationsBadRequest creates GetOrganizationsBadRequest with default headers values
func NewGetOrganizationsBadRequest() *GetOrganizationsBadRequest {

	return &GetOrganizationsBadRequest{}
}

// WithPayload adds the payload to the get organizations bad request response
func (o *GetOrganizationsBadRequest) WithPayload(payload *models.Error) *GetOrganizationsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organizations bad request response
func (o *GetOrganizationsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetOrganizationsBadRequest) GetOrganizationsResponder() {}

// GetOrganizationsForbiddenCode is the HTTP code returned for type GetOrganizationsForbidden
const GetOrganizationsForbiddenCode int = 403

/*
GetOrganizationsForbidden Forbidden

swagger:response getOrganizationsForbidden
*/
type GetOrganizationsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOrganizationsForbidden creates GetOrganizationsForbidden with default headers values
func NewGetOrganizationsForbidden() *GetOrganizationsForbidden {

	return &GetOrganizationsForbidden{}
}

// WithPayload adds the payload to the get organizations forbidden response
func (o *GetOrganizationsForbidden) WithPayload(payload *models.Error) *GetOrganizationsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organizations forbidden response
func (o *GetOrganizationsForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetOrganizationsForbidden) GetOrganizationsResponder() {}

// GetOrganizationsInternalServerErrorCode is the HTTP code returned for type GetOrganizationsInternalServerError
const GetOrganizationsInternalServerErrorCode int = 500

/*
GetOrganizationsInternalServerError Internal error

swagger:response getOrganizationsInternalServerError
*/
type GetOrganizationsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetOrganizationsInternalServerError creates GetOrganizationsInternalServerError with default headers values
func NewGetOrganizationsInternalServerError() *GetOrganizationsInternalServerError {

	return &GetOrganizationsInternalServerError{}
}

// WithPayload adds the payload to the get organizations internal server error response
func (o *GetOrganizationsInternalServerError) WithPayload(payload *models.Error) *GetOrganizationsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organizations internal server error response
func (o *GetOrganizationsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetOrganizationsInternalServerError) GetOrganizationsResponder() {}

type GetOrganizationsNotImplementedResponder struct {
	middleware.Responder
}

func (*GetOrganizationsNotImplementedResponder) GetOrganizationsResponder() {}

func GetOrganizationsNotImplemented() GetOrganizationsResponder {
	return &GetOrganizationsNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetOrganizations has not yet been implemented",
		),
	}
}

type GetOrganizationsResponder interface {
	middleware.Responder
	GetOrganizationsResponder()
}
