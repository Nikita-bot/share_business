// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"washBonus/openapi/models"
)

// GetSettingsForOrganizationOKCode is the HTTP code returned for type GetSettingsForOrganizationOK
const GetSettingsForOrganizationOKCode int = 200

/*
GetSettingsForOrganizationOK OK

swagger:response getSettingsForOrganizationOK
*/
type GetSettingsForOrganizationOK struct {

	/*
	  In: Body
	*/
	Payload *models.OrganizationSettings `json:"body,omitempty"`
}

// NewGetSettingsForOrganizationOK creates GetSettingsForOrganizationOK with default headers values
func NewGetSettingsForOrganizationOK() *GetSettingsForOrganizationOK {

	return &GetSettingsForOrganizationOK{}
}

// WithPayload adds the payload to the get settings for organization o k response
func (o *GetSettingsForOrganizationOK) WithPayload(payload *models.OrganizationSettings) *GetSettingsForOrganizationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get settings for organization o k response
func (o *GetSettingsForOrganizationOK) SetPayload(payload *models.OrganizationSettings) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSettingsForOrganizationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSettingsForOrganizationOK) GetSettingsForOrganizationResponder() {}

// GetSettingsForOrganizationBadRequestCode is the HTTP code returned for type GetSettingsForOrganizationBadRequest
const GetSettingsForOrganizationBadRequestCode int = 400

/*
GetSettingsForOrganizationBadRequest Bad request

swagger:response getSettingsForOrganizationBadRequest
*/
type GetSettingsForOrganizationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSettingsForOrganizationBadRequest creates GetSettingsForOrganizationBadRequest with default headers values
func NewGetSettingsForOrganizationBadRequest() *GetSettingsForOrganizationBadRequest {

	return &GetSettingsForOrganizationBadRequest{}
}

// WithPayload adds the payload to the get settings for organization bad request response
func (o *GetSettingsForOrganizationBadRequest) WithPayload(payload *models.Error) *GetSettingsForOrganizationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get settings for organization bad request response
func (o *GetSettingsForOrganizationBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSettingsForOrganizationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSettingsForOrganizationBadRequest) GetSettingsForOrganizationResponder() {}

// GetSettingsForOrganizationForbiddenCode is the HTTP code returned for type GetSettingsForOrganizationForbidden
const GetSettingsForOrganizationForbiddenCode int = 403

/*
GetSettingsForOrganizationForbidden Forbidden

swagger:response getSettingsForOrganizationForbidden
*/
type GetSettingsForOrganizationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSettingsForOrganizationForbidden creates GetSettingsForOrganizationForbidden with default headers values
func NewGetSettingsForOrganizationForbidden() *GetSettingsForOrganizationForbidden {

	return &GetSettingsForOrganizationForbidden{}
}

// WithPayload adds the payload to the get settings for organization forbidden response
func (o *GetSettingsForOrganizationForbidden) WithPayload(payload *models.Error) *GetSettingsForOrganizationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get settings for organization forbidden response
func (o *GetSettingsForOrganizationForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSettingsForOrganizationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSettingsForOrganizationForbidden) GetSettingsForOrganizationResponder() {}

// GetSettingsForOrganizationNotFoundCode is the HTTP code returned for type GetSettingsForOrganizationNotFound
const GetSettingsForOrganizationNotFoundCode int = 404

/*
GetSettingsForOrganizationNotFound Not Found

swagger:response getSettingsForOrganizationNotFound
*/
type GetSettingsForOrganizationNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSettingsForOrganizationNotFound creates GetSettingsForOrganizationNotFound with default headers values
func NewGetSettingsForOrganizationNotFound() *GetSettingsForOrganizationNotFound {

	return &GetSettingsForOrganizationNotFound{}
}

// WithPayload adds the payload to the get settings for organization not found response
func (o *GetSettingsForOrganizationNotFound) WithPayload(payload *models.Error) *GetSettingsForOrganizationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get settings for organization not found response
func (o *GetSettingsForOrganizationNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSettingsForOrganizationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSettingsForOrganizationNotFound) GetSettingsForOrganizationResponder() {}

// GetSettingsForOrganizationInternalServerErrorCode is the HTTP code returned for type GetSettingsForOrganizationInternalServerError
const GetSettingsForOrganizationInternalServerErrorCode int = 500

/*
GetSettingsForOrganizationInternalServerError Internal error

swagger:response getSettingsForOrganizationInternalServerError
*/
type GetSettingsForOrganizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSettingsForOrganizationInternalServerError creates GetSettingsForOrganizationInternalServerError with default headers values
func NewGetSettingsForOrganizationInternalServerError() *GetSettingsForOrganizationInternalServerError {

	return &GetSettingsForOrganizationInternalServerError{}
}

// WithPayload adds the payload to the get settings for organization internal server error response
func (o *GetSettingsForOrganizationInternalServerError) WithPayload(payload *models.Error) *GetSettingsForOrganizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get settings for organization internal server error response
func (o *GetSettingsForOrganizationInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSettingsForOrganizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetSettingsForOrganizationInternalServerError) GetSettingsForOrganizationResponder() {}

type GetSettingsForOrganizationNotImplementedResponder struct {
	middleware.Responder
}

func (*GetSettingsForOrganizationNotImplementedResponder) GetSettingsForOrganizationResponder() {}

func GetSettingsForOrganizationNotImplemented() GetSettingsForOrganizationResponder {
	return &GetSettingsForOrganizationNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetSettingsForOrganization has not yet been implemented",
		),
	}
}

type GetSettingsForOrganizationResponder interface {
	middleware.Responder
	GetSettingsForOrganizationResponder()
}
