// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// GetServerGroupsReader is a Reader for the GetServerGroups structure.
type GetServerGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServerGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServerGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServerGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServerGroupsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServerGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /server-groups] getServerGroups", response, response.Code())
	}
}

// NewGetServerGroupsOK creates a GetServerGroupsOK with default headers values
func NewGetServerGroupsOK() *GetServerGroupsOK {
	return &GetServerGroupsOK{}
}

/*
GetServerGroupsOK describes a response with status code 200, with default header values.

OK
*/
type GetServerGroupsOK struct {
	Payload []*models.ServerGroup
}

// IsSuccess returns true when this get server groups o k response has a 2xx status code
func (o *GetServerGroupsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get server groups o k response has a 3xx status code
func (o *GetServerGroupsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server groups o k response has a 4xx status code
func (o *GetServerGroupsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get server groups o k response has a 5xx status code
func (o *GetServerGroupsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get server groups o k response a status code equal to that given
func (o *GetServerGroupsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get server groups o k response
func (o *GetServerGroupsOK) Code() int {
	return 200
}

func (o *GetServerGroupsOK) Error() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsOK  %+v", 200, o.Payload)
}

func (o *GetServerGroupsOK) String() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsOK  %+v", 200, o.Payload)
}

func (o *GetServerGroupsOK) GetPayload() []*models.ServerGroup {
	return o.Payload
}

func (o *GetServerGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupsBadRequest creates a GetServerGroupsBadRequest with default headers values
func NewGetServerGroupsBadRequest() *GetServerGroupsBadRequest {
	return &GetServerGroupsBadRequest{}
}

/*
GetServerGroupsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetServerGroupsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get server groups bad request response has a 2xx status code
func (o *GetServerGroupsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server groups bad request response has a 3xx status code
func (o *GetServerGroupsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server groups bad request response has a 4xx status code
func (o *GetServerGroupsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server groups bad request response has a 5xx status code
func (o *GetServerGroupsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get server groups bad request response a status code equal to that given
func (o *GetServerGroupsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get server groups bad request response
func (o *GetServerGroupsBadRequest) Code() int {
	return 400
}

func (o *GetServerGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetServerGroupsBadRequest) String() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsBadRequest  %+v", 400, o.Payload)
}

func (o *GetServerGroupsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupsForbidden creates a GetServerGroupsForbidden with default headers values
func NewGetServerGroupsForbidden() *GetServerGroupsForbidden {
	return &GetServerGroupsForbidden{}
}

/*
GetServerGroupsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetServerGroupsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get server groups forbidden response has a 2xx status code
func (o *GetServerGroupsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server groups forbidden response has a 3xx status code
func (o *GetServerGroupsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server groups forbidden response has a 4xx status code
func (o *GetServerGroupsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server groups forbidden response has a 5xx status code
func (o *GetServerGroupsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get server groups forbidden response a status code equal to that given
func (o *GetServerGroupsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get server groups forbidden response
func (o *GetServerGroupsForbidden) Code() int {
	return 403
}

func (o *GetServerGroupsForbidden) Error() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetServerGroupsForbidden) String() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsForbidden  %+v", 403, o.Payload)
}

func (o *GetServerGroupsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerGroupsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupsInternalServerError creates a GetServerGroupsInternalServerError with default headers values
func NewGetServerGroupsInternalServerError() *GetServerGroupsInternalServerError {
	return &GetServerGroupsInternalServerError{}
}

/*
GetServerGroupsInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetServerGroupsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get server groups internal server error response has a 2xx status code
func (o *GetServerGroupsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server groups internal server error response has a 3xx status code
func (o *GetServerGroupsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server groups internal server error response has a 4xx status code
func (o *GetServerGroupsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get server groups internal server error response has a 5xx status code
func (o *GetServerGroupsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get server groups internal server error response a status code equal to that given
func (o *GetServerGroupsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get server groups internal server error response
func (o *GetServerGroupsInternalServerError) Code() int {
	return 500
}

func (o *GetServerGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServerGroupsInternalServerError) String() string {
	return fmt.Sprintf("[GET /server-groups][%d] getServerGroupsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServerGroupsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetServerGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
