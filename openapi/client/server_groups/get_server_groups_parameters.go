// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// NewGetServerGroupsParams creates a new GetServerGroupsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetServerGroupsParams() *GetServerGroupsParams {
	return &GetServerGroupsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetServerGroupsParamsWithTimeout creates a new GetServerGroupsParams object
// with the ability to set a timeout on a request.
func NewGetServerGroupsParamsWithTimeout(timeout time.Duration) *GetServerGroupsParams {
	return &GetServerGroupsParams{
		timeout: timeout,
	}
}

// NewGetServerGroupsParamsWithContext creates a new GetServerGroupsParams object
// with the ability to set a context for a request.
func NewGetServerGroupsParamsWithContext(ctx context.Context) *GetServerGroupsParams {
	return &GetServerGroupsParams{
		Context: ctx,
	}
}

// NewGetServerGroupsParamsWithHTTPClient creates a new GetServerGroupsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetServerGroupsParamsWithHTTPClient(client *http.Client) *GetServerGroupsParams {
	return &GetServerGroupsParams{
		HTTPClient: client,
	}
}

/*
GetServerGroupsParams contains all the parameters to send to the API endpoint

	for the get server groups operation.

	Typically these are written to a http.Request.
*/
type GetServerGroupsParams struct {

	// Body.
	Body *models.Pagination

	// OrganizationID.
	//
	// Format: uuid
	OrganizationID *strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get server groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServerGroupsParams) WithDefaults() *GetServerGroupsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get server groups params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetServerGroupsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get server groups params
func (o *GetServerGroupsParams) WithTimeout(timeout time.Duration) *GetServerGroupsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get server groups params
func (o *GetServerGroupsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get server groups params
func (o *GetServerGroupsParams) WithContext(ctx context.Context) *GetServerGroupsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get server groups params
func (o *GetServerGroupsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get server groups params
func (o *GetServerGroupsParams) WithHTTPClient(client *http.Client) *GetServerGroupsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get server groups params
func (o *GetServerGroupsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the get server groups params
func (o *GetServerGroupsParams) WithBody(body *models.Pagination) *GetServerGroupsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get server groups params
func (o *GetServerGroupsParams) SetBody(body *models.Pagination) {
	o.Body = body
}

// WithOrganizationID adds the organizationID to the get server groups params
func (o *GetServerGroupsParams) WithOrganizationID(organizationID *strfmt.UUID) *GetServerGroupsParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get server groups params
func (o *GetServerGroupsParams) SetOrganizationID(organizationID *strfmt.UUID) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *GetServerGroupsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.OrganizationID != nil {

		// query param organizationId
		var qrOrganizationID strfmt.UUID

		if o.OrganizationID != nil {
			qrOrganizationID = *o.OrganizationID
		}
		qOrganizationID := qrOrganizationID.String()
		if qOrganizationID != "" {

			if err := r.SetQueryParam("organizationId", qOrganizationID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
