// Code generated by go-swagger; DO NOT EDIT.

package server_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// CreateServerGroupReader is a Reader for the CreateServerGroup structure.
type CreateServerGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateServerGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateServerGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateServerGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateServerGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateServerGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /server-groups] createServerGroup", response, response.Code())
	}
}

// NewCreateServerGroupOK creates a CreateServerGroupOK with default headers values
func NewCreateServerGroupOK() *CreateServerGroupOK {
	return &CreateServerGroupOK{}
}

/*
CreateServerGroupOK describes a response with status code 200, with default header values.

Successfull created
*/
type CreateServerGroupOK struct {
	Payload *models.ServerGroup
}

// IsSuccess returns true when this create server group o k response has a 2xx status code
func (o *CreateServerGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create server group o k response has a 3xx status code
func (o *CreateServerGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create server group o k response has a 4xx status code
func (o *CreateServerGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create server group o k response has a 5xx status code
func (o *CreateServerGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create server group o k response a status code equal to that given
func (o *CreateServerGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create server group o k response
func (o *CreateServerGroupOK) Code() int {
	return 200
}

func (o *CreateServerGroupOK) Error() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupOK  %+v", 200, o.Payload)
}

func (o *CreateServerGroupOK) String() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupOK  %+v", 200, o.Payload)
}

func (o *CreateServerGroupOK) GetPayload() *models.ServerGroup {
	return o.Payload
}

func (o *CreateServerGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServerGroupBadRequest creates a CreateServerGroupBadRequest with default headers values
func NewCreateServerGroupBadRequest() *CreateServerGroupBadRequest {
	return &CreateServerGroupBadRequest{}
}

/*
CreateServerGroupBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateServerGroupBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create server group bad request response has a 2xx status code
func (o *CreateServerGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create server group bad request response has a 3xx status code
func (o *CreateServerGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create server group bad request response has a 4xx status code
func (o *CreateServerGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create server group bad request response has a 5xx status code
func (o *CreateServerGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create server group bad request response a status code equal to that given
func (o *CreateServerGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create server group bad request response
func (o *CreateServerGroupBadRequest) Code() int {
	return 400
}

func (o *CreateServerGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupBadRequest  %+v", 400, o.Payload)
}

func (o *CreateServerGroupBadRequest) String() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupBadRequest  %+v", 400, o.Payload)
}

func (o *CreateServerGroupBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServerGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServerGroupForbidden creates a CreateServerGroupForbidden with default headers values
func NewCreateServerGroupForbidden() *CreateServerGroupForbidden {
	return &CreateServerGroupForbidden{}
}

/*
CreateServerGroupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateServerGroupForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create server group forbidden response has a 2xx status code
func (o *CreateServerGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create server group forbidden response has a 3xx status code
func (o *CreateServerGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create server group forbidden response has a 4xx status code
func (o *CreateServerGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create server group forbidden response has a 5xx status code
func (o *CreateServerGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create server group forbidden response a status code equal to that given
func (o *CreateServerGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create server group forbidden response
func (o *CreateServerGroupForbidden) Code() int {
	return 403
}

func (o *CreateServerGroupForbidden) Error() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupForbidden  %+v", 403, o.Payload)
}

func (o *CreateServerGroupForbidden) String() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupForbidden  %+v", 403, o.Payload)
}

func (o *CreateServerGroupForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServerGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServerGroupInternalServerError creates a CreateServerGroupInternalServerError with default headers values
func NewCreateServerGroupInternalServerError() *CreateServerGroupInternalServerError {
	return &CreateServerGroupInternalServerError{}
}

/*
CreateServerGroupInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type CreateServerGroupInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this create server group internal server error response has a 2xx status code
func (o *CreateServerGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create server group internal server error response has a 3xx status code
func (o *CreateServerGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create server group internal server error response has a 4xx status code
func (o *CreateServerGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create server group internal server error response has a 5xx status code
func (o *CreateServerGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create server group internal server error response a status code equal to that given
func (o *CreateServerGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create server group internal server error response
func (o *CreateServerGroupInternalServerError) Code() int {
	return 500
}

func (o *CreateServerGroupInternalServerError) Error() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateServerGroupInternalServerError) String() string {
	return fmt.Sprintf("[POST /server-groups][%d] createServerGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateServerGroupInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServerGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
