// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// GetOrganizationByIDReader is a Reader for the GetOrganizationByID structure.
type GetOrganizationByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrganizationByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrganizationByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOrganizationByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrganizationByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrganizationByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrganizationByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /organizations/{organizationId}] getOrganizationById", response, response.Code())
	}
}

// NewGetOrganizationByIDOK creates a GetOrganizationByIDOK with default headers values
func NewGetOrganizationByIDOK() *GetOrganizationByIDOK {
	return &GetOrganizationByIDOK{}
}

/*
GetOrganizationByIDOK describes a response with status code 200, with default header values.

OK
*/
type GetOrganizationByIDOK struct {
	Payload *models.Organization
}

// IsSuccess returns true when this get organization by Id o k response has a 2xx status code
func (o *GetOrganizationByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get organization by Id o k response has a 3xx status code
func (o *GetOrganizationByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization by Id o k response has a 4xx status code
func (o *GetOrganizationByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization by Id o k response has a 5xx status code
func (o *GetOrganizationByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization by Id o k response a status code equal to that given
func (o *GetOrganizationByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get organization by Id o k response
func (o *GetOrganizationByIDOK) Code() int {
	return 200
}

func (o *GetOrganizationByIDOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationByIDOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdOK  %+v", 200, o.Payload)
}

func (o *GetOrganizationByIDOK) GetPayload() *models.Organization {
	return o.Payload
}

func (o *GetOrganizationByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationByIDBadRequest creates a GetOrganizationByIDBadRequest with default headers values
func NewGetOrganizationByIDBadRequest() *GetOrganizationByIDBadRequest {
	return &GetOrganizationByIDBadRequest{}
}

/*
GetOrganizationByIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetOrganizationByIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get organization by Id bad request response has a 2xx status code
func (o *GetOrganizationByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization by Id bad request response has a 3xx status code
func (o *GetOrganizationByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization by Id bad request response has a 4xx status code
func (o *GetOrganizationByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization by Id bad request response has a 5xx status code
func (o *GetOrganizationByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization by Id bad request response a status code equal to that given
func (o *GetOrganizationByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get organization by Id bad request response
func (o *GetOrganizationByIDBadRequest) Code() int {
	return 400
}

func (o *GetOrganizationByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationByIDBadRequest) String() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetOrganizationByIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOrganizationByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationByIDForbidden creates a GetOrganizationByIDForbidden with default headers values
func NewGetOrganizationByIDForbidden() *GetOrganizationByIDForbidden {
	return &GetOrganizationByIDForbidden{}
}

/*
GetOrganizationByIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOrganizationByIDForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get organization by Id forbidden response has a 2xx status code
func (o *GetOrganizationByIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization by Id forbidden response has a 3xx status code
func (o *GetOrganizationByIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization by Id forbidden response has a 4xx status code
func (o *GetOrganizationByIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization by Id forbidden response has a 5xx status code
func (o *GetOrganizationByIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization by Id forbidden response a status code equal to that given
func (o *GetOrganizationByIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get organization by Id forbidden response
func (o *GetOrganizationByIDForbidden) Code() int {
	return 403
}

func (o *GetOrganizationByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationByIDForbidden) String() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetOrganizationByIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOrganizationByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationByIDNotFound creates a GetOrganizationByIDNotFound with default headers values
func NewGetOrganizationByIDNotFound() *GetOrganizationByIDNotFound {
	return &GetOrganizationByIDNotFound{}
}

/*
GetOrganizationByIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOrganizationByIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get organization by Id not found response has a 2xx status code
func (o *GetOrganizationByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization by Id not found response has a 3xx status code
func (o *GetOrganizationByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization by Id not found response has a 4xx status code
func (o *GetOrganizationByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get organization by Id not found response has a 5xx status code
func (o *GetOrganizationByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get organization by Id not found response a status code equal to that given
func (o *GetOrganizationByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get organization by Id not found response
func (o *GetOrganizationByIDNotFound) Code() int {
	return 404
}

func (o *GetOrganizationByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationByIDNotFound) String() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetOrganizationByIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOrganizationByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrganizationByIDInternalServerError creates a GetOrganizationByIDInternalServerError with default headers values
func NewGetOrganizationByIDInternalServerError() *GetOrganizationByIDInternalServerError {
	return &GetOrganizationByIDInternalServerError{}
}

/*
GetOrganizationByIDInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetOrganizationByIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get organization by Id internal server error response has a 2xx status code
func (o *GetOrganizationByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get organization by Id internal server error response has a 3xx status code
func (o *GetOrganizationByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get organization by Id internal server error response has a 4xx status code
func (o *GetOrganizationByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get organization by Id internal server error response has a 5xx status code
func (o *GetOrganizationByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get organization by Id internal server error response a status code equal to that given
func (o *GetOrganizationByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get organization by Id internal server error response
func (o *GetOrganizationByIDInternalServerError) Code() int {
	return 500
}

func (o *GetOrganizationByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrganizationByIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /organizations/{organizationId}][%d] getOrganizationByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOrganizationByIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOrganizationByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
