// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// RemoveUserFromOrganizationReader is a Reader for the RemoveUserFromOrganization structure.
type RemoveUserFromOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveUserFromOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveUserFromOrganizationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveUserFromOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveUserFromOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveUserFromOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveUserFromOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /organizations/{organizationId}/users/{userId}] removeUserFromOrganization", response, response.Code())
	}
}

// NewRemoveUserFromOrganizationNoContent creates a RemoveUserFromOrganizationNoContent with default headers values
func NewRemoveUserFromOrganizationNoContent() *RemoveUserFromOrganizationNoContent {
	return &RemoveUserFromOrganizationNoContent{}
}

/*
RemoveUserFromOrganizationNoContent describes a response with status code 204, with default header values.

OK
*/
type RemoveUserFromOrganizationNoContent struct {
}

// IsSuccess returns true when this remove user from organization no content response has a 2xx status code
func (o *RemoveUserFromOrganizationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove user from organization no content response has a 3xx status code
func (o *RemoveUserFromOrganizationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user from organization no content response has a 4xx status code
func (o *RemoveUserFromOrganizationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove user from organization no content response has a 5xx status code
func (o *RemoveUserFromOrganizationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this remove user from organization no content response a status code equal to that given
func (o *RemoveUserFromOrganizationNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the remove user from organization no content response
func (o *RemoveUserFromOrganizationNoContent) Code() int {
	return 204
}

func (o *RemoveUserFromOrganizationNoContent) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationNoContent ", 204)
}

func (o *RemoveUserFromOrganizationNoContent) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationNoContent ", 204)
}

func (o *RemoveUserFromOrganizationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveUserFromOrganizationBadRequest creates a RemoveUserFromOrganizationBadRequest with default headers values
func NewRemoveUserFromOrganizationBadRequest() *RemoveUserFromOrganizationBadRequest {
	return &RemoveUserFromOrganizationBadRequest{}
}

/*
RemoveUserFromOrganizationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RemoveUserFromOrganizationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove user from organization bad request response has a 2xx status code
func (o *RemoveUserFromOrganizationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove user from organization bad request response has a 3xx status code
func (o *RemoveUserFromOrganizationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user from organization bad request response has a 4xx status code
func (o *RemoveUserFromOrganizationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove user from organization bad request response has a 5xx status code
func (o *RemoveUserFromOrganizationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove user from organization bad request response a status code equal to that given
func (o *RemoveUserFromOrganizationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove user from organization bad request response
func (o *RemoveUserFromOrganizationBadRequest) Code() int {
	return 400
}

func (o *RemoveUserFromOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveUserFromOrganizationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveUserFromOrganizationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveUserFromOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserFromOrganizationForbidden creates a RemoveUserFromOrganizationForbidden with default headers values
func NewRemoveUserFromOrganizationForbidden() *RemoveUserFromOrganizationForbidden {
	return &RemoveUserFromOrganizationForbidden{}
}

/*
RemoveUserFromOrganizationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RemoveUserFromOrganizationForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove user from organization forbidden response has a 2xx status code
func (o *RemoveUserFromOrganizationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove user from organization forbidden response has a 3xx status code
func (o *RemoveUserFromOrganizationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user from organization forbidden response has a 4xx status code
func (o *RemoveUserFromOrganizationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove user from organization forbidden response has a 5xx status code
func (o *RemoveUserFromOrganizationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this remove user from organization forbidden response a status code equal to that given
func (o *RemoveUserFromOrganizationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the remove user from organization forbidden response
func (o *RemoveUserFromOrganizationForbidden) Code() int {
	return 403
}

func (o *RemoveUserFromOrganizationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *RemoveUserFromOrganizationForbidden) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *RemoveUserFromOrganizationForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveUserFromOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserFromOrganizationNotFound creates a RemoveUserFromOrganizationNotFound with default headers values
func NewRemoveUserFromOrganizationNotFound() *RemoveUserFromOrganizationNotFound {
	return &RemoveUserFromOrganizationNotFound{}
}

/*
RemoveUserFromOrganizationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RemoveUserFromOrganizationNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove user from organization not found response has a 2xx status code
func (o *RemoveUserFromOrganizationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove user from organization not found response has a 3xx status code
func (o *RemoveUserFromOrganizationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user from organization not found response has a 4xx status code
func (o *RemoveUserFromOrganizationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove user from organization not found response has a 5xx status code
func (o *RemoveUserFromOrganizationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove user from organization not found response a status code equal to that given
func (o *RemoveUserFromOrganizationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove user from organization not found response
func (o *RemoveUserFromOrganizationNotFound) Code() int {
	return 404
}

func (o *RemoveUserFromOrganizationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *RemoveUserFromOrganizationNotFound) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *RemoveUserFromOrganizationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveUserFromOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveUserFromOrganizationInternalServerError creates a RemoveUserFromOrganizationInternalServerError with default headers values
func NewRemoveUserFromOrganizationInternalServerError() *RemoveUserFromOrganizationInternalServerError {
	return &RemoveUserFromOrganizationInternalServerError{}
}

/*
RemoveUserFromOrganizationInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type RemoveUserFromOrganizationInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove user from organization internal server error response has a 2xx status code
func (o *RemoveUserFromOrganizationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove user from organization internal server error response has a 3xx status code
func (o *RemoveUserFromOrganizationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove user from organization internal server error response has a 4xx status code
func (o *RemoveUserFromOrganizationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove user from organization internal server error response has a 5xx status code
func (o *RemoveUserFromOrganizationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove user from organization internal server error response a status code equal to that given
func (o *RemoveUserFromOrganizationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove user from organization internal server error response
func (o *RemoveUserFromOrganizationInternalServerError) Code() int {
	return 500
}

func (o *RemoveUserFromOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveUserFromOrganizationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationId}/users/{userId}][%d] removeUserFromOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveUserFromOrganizationInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveUserFromOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
