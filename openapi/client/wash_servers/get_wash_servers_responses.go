// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// GetWashServersReader is a Reader for the GetWashServers structure.
type GetWashServersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWashServersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWashServersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWashServersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWashServersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWashServersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /wash-servers/] getWashServers", response, response.Code())
	}
}

// NewGetWashServersOK creates a GetWashServersOK with default headers values
func NewGetWashServersOK() *GetWashServersOK {
	return &GetWashServersOK{}
}

/*
GetWashServersOK describes a response with status code 200, with default header values.

OK
*/
type GetWashServersOK struct {
	Payload []*models.WashServer
}

// IsSuccess returns true when this get wash servers o k response has a 2xx status code
func (o *GetWashServersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get wash servers o k response has a 3xx status code
func (o *GetWashServersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash servers o k response has a 4xx status code
func (o *GetWashServersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wash servers o k response has a 5xx status code
func (o *GetWashServersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get wash servers o k response a status code equal to that given
func (o *GetWashServersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get wash servers o k response
func (o *GetWashServersOK) Code() int {
	return 200
}

func (o *GetWashServersOK) Error() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersOK  %+v", 200, o.Payload)
}

func (o *GetWashServersOK) String() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersOK  %+v", 200, o.Payload)
}

func (o *GetWashServersOK) GetPayload() []*models.WashServer {
	return o.Payload
}

func (o *GetWashServersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWashServersBadRequest creates a GetWashServersBadRequest with default headers values
func NewGetWashServersBadRequest() *GetWashServersBadRequest {
	return &GetWashServersBadRequest{}
}

/*
GetWashServersBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetWashServersBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wash servers bad request response has a 2xx status code
func (o *GetWashServersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wash servers bad request response has a 3xx status code
func (o *GetWashServersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash servers bad request response has a 4xx status code
func (o *GetWashServersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wash servers bad request response has a 5xx status code
func (o *GetWashServersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get wash servers bad request response a status code equal to that given
func (o *GetWashServersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get wash servers bad request response
func (o *GetWashServersBadRequest) Code() int {
	return 400
}

func (o *GetWashServersBadRequest) Error() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersBadRequest  %+v", 400, o.Payload)
}

func (o *GetWashServersBadRequest) String() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersBadRequest  %+v", 400, o.Payload)
}

func (o *GetWashServersBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWashServersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWashServersForbidden creates a GetWashServersForbidden with default headers values
func NewGetWashServersForbidden() *GetWashServersForbidden {
	return &GetWashServersForbidden{}
}

/*
GetWashServersForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWashServersForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wash servers forbidden response has a 2xx status code
func (o *GetWashServersForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wash servers forbidden response has a 3xx status code
func (o *GetWashServersForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash servers forbidden response has a 4xx status code
func (o *GetWashServersForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wash servers forbidden response has a 5xx status code
func (o *GetWashServersForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get wash servers forbidden response a status code equal to that given
func (o *GetWashServersForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get wash servers forbidden response
func (o *GetWashServersForbidden) Code() int {
	return 403
}

func (o *GetWashServersForbidden) Error() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersForbidden  %+v", 403, o.Payload)
}

func (o *GetWashServersForbidden) String() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersForbidden  %+v", 403, o.Payload)
}

func (o *GetWashServersForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWashServersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWashServersInternalServerError creates a GetWashServersInternalServerError with default headers values
func NewGetWashServersInternalServerError() *GetWashServersInternalServerError {
	return &GetWashServersInternalServerError{}
}

/*
GetWashServersInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetWashServersInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wash servers internal server error response has a 2xx status code
func (o *GetWashServersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wash servers internal server error response has a 3xx status code
func (o *GetWashServersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash servers internal server error response has a 4xx status code
func (o *GetWashServersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wash servers internal server error response has a 5xx status code
func (o *GetWashServersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get wash servers internal server error response a status code equal to that given
func (o *GetWashServersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get wash servers internal server error response
func (o *GetWashServersInternalServerError) Code() int {
	return 500
}

func (o *GetWashServersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWashServersInternalServerError) String() string {
	return fmt.Sprintf("[GET /wash-servers/][%d] getWashServersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWashServersInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWashServersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
