// Code generated by go-swagger; DO NOT EDIT.

package wallets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// GetWalletByOrganizationIDReader is a Reader for the GetWalletByOrganizationID structure.
type GetWalletByOrganizationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWalletByOrganizationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWalletByOrganizationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWalletByOrganizationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWalletByOrganizationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWalletByOrganizationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWalletByOrganizationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /wallets/by-organization/{id}] getWalletByOrganizationId", response, response.Code())
	}
}

// NewGetWalletByOrganizationIDOK creates a GetWalletByOrganizationIDOK with default headers values
func NewGetWalletByOrganizationIDOK() *GetWalletByOrganizationIDOK {
	return &GetWalletByOrganizationIDOK{}
}

/*
GetWalletByOrganizationIDOK describes a response with status code 200, with default header values.

OK
*/
type GetWalletByOrganizationIDOK struct {
	Payload *models.Wallet
}

// IsSuccess returns true when this get wallet by organization Id o k response has a 2xx status code
func (o *GetWalletByOrganizationIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get wallet by organization Id o k response has a 3xx status code
func (o *GetWalletByOrganizationIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet by organization Id o k response has a 4xx status code
func (o *GetWalletByOrganizationIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallet by organization Id o k response has a 5xx status code
func (o *GetWalletByOrganizationIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet by organization Id o k response a status code equal to that given
func (o *GetWalletByOrganizationIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get wallet by organization Id o k response
func (o *GetWalletByOrganizationIDOK) Code() int {
	return 200
}

func (o *GetWalletByOrganizationIDOK) Error() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdOK  %+v", 200, o.Payload)
}

func (o *GetWalletByOrganizationIDOK) String() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdOK  %+v", 200, o.Payload)
}

func (o *GetWalletByOrganizationIDOK) GetPayload() *models.Wallet {
	return o.Payload
}

func (o *GetWalletByOrganizationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Wallet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletByOrganizationIDBadRequest creates a GetWalletByOrganizationIDBadRequest with default headers values
func NewGetWalletByOrganizationIDBadRequest() *GetWalletByOrganizationIDBadRequest {
	return &GetWalletByOrganizationIDBadRequest{}
}

/*
GetWalletByOrganizationIDBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetWalletByOrganizationIDBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallet by organization Id bad request response has a 2xx status code
func (o *GetWalletByOrganizationIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet by organization Id bad request response has a 3xx status code
func (o *GetWalletByOrganizationIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet by organization Id bad request response has a 4xx status code
func (o *GetWalletByOrganizationIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallet by organization Id bad request response has a 5xx status code
func (o *GetWalletByOrganizationIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet by organization Id bad request response a status code equal to that given
func (o *GetWalletByOrganizationIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get wallet by organization Id bad request response
func (o *GetWalletByOrganizationIDBadRequest) Code() int {
	return 400
}

func (o *GetWalletByOrganizationIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetWalletByOrganizationIDBadRequest) String() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetWalletByOrganizationIDBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletByOrganizationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletByOrganizationIDForbidden creates a GetWalletByOrganizationIDForbidden with default headers values
func NewGetWalletByOrganizationIDForbidden() *GetWalletByOrganizationIDForbidden {
	return &GetWalletByOrganizationIDForbidden{}
}

/*
GetWalletByOrganizationIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWalletByOrganizationIDForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallet by organization Id forbidden response has a 2xx status code
func (o *GetWalletByOrganizationIDForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet by organization Id forbidden response has a 3xx status code
func (o *GetWalletByOrganizationIDForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet by organization Id forbidden response has a 4xx status code
func (o *GetWalletByOrganizationIDForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallet by organization Id forbidden response has a 5xx status code
func (o *GetWalletByOrganizationIDForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet by organization Id forbidden response a status code equal to that given
func (o *GetWalletByOrganizationIDForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get wallet by organization Id forbidden response
func (o *GetWalletByOrganizationIDForbidden) Code() int {
	return 403
}

func (o *GetWalletByOrganizationIDForbidden) Error() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdForbidden  %+v", 403, o.Payload)
}

func (o *GetWalletByOrganizationIDForbidden) String() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdForbidden  %+v", 403, o.Payload)
}

func (o *GetWalletByOrganizationIDForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletByOrganizationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletByOrganizationIDNotFound creates a GetWalletByOrganizationIDNotFound with default headers values
func NewGetWalletByOrganizationIDNotFound() *GetWalletByOrganizationIDNotFound {
	return &GetWalletByOrganizationIDNotFound{}
}

/*
GetWalletByOrganizationIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetWalletByOrganizationIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallet by organization Id not found response has a 2xx status code
func (o *GetWalletByOrganizationIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet by organization Id not found response has a 3xx status code
func (o *GetWalletByOrganizationIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet by organization Id not found response has a 4xx status code
func (o *GetWalletByOrganizationIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallet by organization Id not found response has a 5xx status code
func (o *GetWalletByOrganizationIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallet by organization Id not found response a status code equal to that given
func (o *GetWalletByOrganizationIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get wallet by organization Id not found response
func (o *GetWalletByOrganizationIDNotFound) Code() int {
	return 404
}

func (o *GetWalletByOrganizationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetWalletByOrganizationIDNotFound) String() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetWalletByOrganizationIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletByOrganizationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletByOrganizationIDInternalServerError creates a GetWalletByOrganizationIDInternalServerError with default headers values
func NewGetWalletByOrganizationIDInternalServerError() *GetWalletByOrganizationIDInternalServerError {
	return &GetWalletByOrganizationIDInternalServerError{}
}

/*
GetWalletByOrganizationIDInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetWalletByOrganizationIDInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallet by organization Id internal server error response has a 2xx status code
func (o *GetWalletByOrganizationIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallet by organization Id internal server error response has a 3xx status code
func (o *GetWalletByOrganizationIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallet by organization Id internal server error response has a 4xx status code
func (o *GetWalletByOrganizationIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallet by organization Id internal server error response has a 5xx status code
func (o *GetWalletByOrganizationIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get wallet by organization Id internal server error response a status code equal to that given
func (o *GetWalletByOrganizationIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get wallet by organization Id internal server error response
func (o *GetWalletByOrganizationIDInternalServerError) Code() int {
	return 500
}

func (o *GetWalletByOrganizationIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWalletByOrganizationIDInternalServerError) String() string {
	return fmt.Sprintf("[GET /wallets/by-organization/{id}][%d] getWalletByOrganizationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWalletByOrganizationIDInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletByOrganizationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
