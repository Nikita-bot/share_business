// Code generated by go-swagger; DO NOT EDIT.

package wallets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"washBonus/openapi/models"
)

// GetWalletsReader is a Reader for the GetWallets structure.
type GetWalletsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWalletsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWalletsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWalletsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWalletsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWalletsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWalletsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /wallets] getWallets", response, response.Code())
	}
}

// NewGetWalletsOK creates a GetWalletsOK with default headers values
func NewGetWalletsOK() *GetWalletsOK {
	return &GetWalletsOK{}
}

/*
GetWalletsOK describes a response with status code 200, with default header values.

OK
*/
type GetWalletsOK struct {
	Payload []*models.Wallet
}

// IsSuccess returns true when this get wallets o k response has a 2xx status code
func (o *GetWalletsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get wallets o k response has a 3xx status code
func (o *GetWalletsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallets o k response has a 4xx status code
func (o *GetWalletsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallets o k response has a 5xx status code
func (o *GetWalletsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallets o k response a status code equal to that given
func (o *GetWalletsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get wallets o k response
func (o *GetWalletsOK) Code() int {
	return 200
}

func (o *GetWalletsOK) Error() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsOK  %+v", 200, o.Payload)
}

func (o *GetWalletsOK) String() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsOK  %+v", 200, o.Payload)
}

func (o *GetWalletsOK) GetPayload() []*models.Wallet {
	return o.Payload
}

func (o *GetWalletsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletsBadRequest creates a GetWalletsBadRequest with default headers values
func NewGetWalletsBadRequest() *GetWalletsBadRequest {
	return &GetWalletsBadRequest{}
}

/*
GetWalletsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetWalletsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallets bad request response has a 2xx status code
func (o *GetWalletsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallets bad request response has a 3xx status code
func (o *GetWalletsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallets bad request response has a 4xx status code
func (o *GetWalletsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallets bad request response has a 5xx status code
func (o *GetWalletsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallets bad request response a status code equal to that given
func (o *GetWalletsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get wallets bad request response
func (o *GetWalletsBadRequest) Code() int {
	return 400
}

func (o *GetWalletsBadRequest) Error() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsBadRequest  %+v", 400, o.Payload)
}

func (o *GetWalletsBadRequest) String() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsBadRequest  %+v", 400, o.Payload)
}

func (o *GetWalletsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletsForbidden creates a GetWalletsForbidden with default headers values
func NewGetWalletsForbidden() *GetWalletsForbidden {
	return &GetWalletsForbidden{}
}

/*
GetWalletsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWalletsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallets forbidden response has a 2xx status code
func (o *GetWalletsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallets forbidden response has a 3xx status code
func (o *GetWalletsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallets forbidden response has a 4xx status code
func (o *GetWalletsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallets forbidden response has a 5xx status code
func (o *GetWalletsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallets forbidden response a status code equal to that given
func (o *GetWalletsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get wallets forbidden response
func (o *GetWalletsForbidden) Code() int {
	return 403
}

func (o *GetWalletsForbidden) Error() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsForbidden  %+v", 403, o.Payload)
}

func (o *GetWalletsForbidden) String() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsForbidden  %+v", 403, o.Payload)
}

func (o *GetWalletsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletsNotFound creates a GetWalletsNotFound with default headers values
func NewGetWalletsNotFound() *GetWalletsNotFound {
	return &GetWalletsNotFound{}
}

/*
GetWalletsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetWalletsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallets not found response has a 2xx status code
func (o *GetWalletsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallets not found response has a 3xx status code
func (o *GetWalletsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallets not found response has a 4xx status code
func (o *GetWalletsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wallets not found response has a 5xx status code
func (o *GetWalletsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get wallets not found response a status code equal to that given
func (o *GetWalletsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get wallets not found response
func (o *GetWalletsNotFound) Code() int {
	return 404
}

func (o *GetWalletsNotFound) Error() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsNotFound  %+v", 404, o.Payload)
}

func (o *GetWalletsNotFound) String() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsNotFound  %+v", 404, o.Payload)
}

func (o *GetWalletsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWalletsInternalServerError creates a GetWalletsInternalServerError with default headers values
func NewGetWalletsInternalServerError() *GetWalletsInternalServerError {
	return &GetWalletsInternalServerError{}
}

/*
GetWalletsInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetWalletsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wallets internal server error response has a 2xx status code
func (o *GetWalletsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wallets internal server error response has a 3xx status code
func (o *GetWalletsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wallets internal server error response has a 4xx status code
func (o *GetWalletsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wallets internal server error response has a 5xx status code
func (o *GetWalletsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get wallets internal server error response a status code equal to that given
func (o *GetWalletsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get wallets internal server error response
func (o *GetWalletsInternalServerError) Code() int {
	return 500
}

func (o *GetWalletsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWalletsInternalServerError) String() string {
	return fmt.Sprintf("[GET /wallets][%d] getWalletsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWalletsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWalletsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
