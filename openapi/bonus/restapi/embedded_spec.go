// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bonus system service for self-service car washes",
    "title": "wash-bonus",
    "version": "1.0.0"
  },
  "paths": {
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "getSessionById",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/sessions/{sessionId}/assign-user": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "assignUserToSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/sessions/{sessionId}/bonuses": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "chargeBonusesOnSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/wallets": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWallets",
        "parameters": [
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    },
    "/wallets/by-organization/{id}": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWalletByOrganizationId",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    }
  },
  "definitions": {
    "BonusCharge": {
      "description": "bonus amount for use in session",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Session": {
      "description": "session",
      "type": "object",
      "properties": {
        "postBalance": {
          "type": "integer"
        },
        "postID": {
          "type": "integer"
        },
        "washServer": {
          "$ref": "#/definitions/WashServer"
        }
      }
    },
    "Wallet": {
      "type": "object",
      "required": [
        "id",
        "userId",
        "organization",
        "balance",
        "pendingBalance"
      ],
      "properties": {
        "balance": {
          "type": "integer",
          "x-omitempty": false
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "pendingBalance": {
          "type": "integer",
          "x-omitempty": false
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "WashServer": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  },
  "parameters": {
    "isManagedByMe": {
      "type": "boolean",
      "default": false,
      "name": "isManagedByMe",
      "in": "query"
    },
    "limit": {
      "type": "integer",
      "format": "int64",
      "default": 100,
      "description": "Maximum number of records to return",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "type": "integer",
      "format": "int64",
      "default": 0,
      "description": "Number of records to skip for pagination",
      "name": "offset",
      "in": "query"
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bonus system service for self-service car washes",
    "title": "wash-bonus",
    "version": "1.0.0"
  },
  "paths": {
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{sessionId}": {
      "get": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "getSessionById",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/assign-user": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "assignUserToSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/{sessionId}/bonuses": {
      "post": {
        "security": [
          {
            "authKey": []
          }
        ],
        "tags": [
          "sessions"
        ],
        "operationId": "chargeBonusesOnSession",
        "parameters": [
          {
            "type": "string",
            "name": "sessionId",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BonusCharge"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wallets": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWallets",
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Number of records to skip for pagination",
            "name": "offset",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "format": "int64",
            "default": 100,
            "description": "Maximum number of records to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/wallets/by-organization/{id}": {
      "get": {
        "tags": [
          "wallets"
        ],
        "operationId": "getWalletByOrganizationId",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Wallet"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BonusCharge": {
      "description": "bonus amount for use in session",
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Session": {
      "description": "session",
      "type": "object",
      "properties": {
        "postBalance": {
          "type": "integer"
        },
        "postID": {
          "type": "integer"
        },
        "washServer": {
          "$ref": "#/definitions/WashServer"
        }
      }
    },
    "Wallet": {
      "type": "object",
      "required": [
        "id",
        "userId",
        "organization",
        "balance",
        "pendingBalance"
      ],
      "properties": {
        "balance": {
          "type": "integer",
          "x-omitempty": false
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "organization": {
          "$ref": "#/definitions/Organization"
        },
        "pendingBalance": {
          "type": "integer",
          "x-omitempty": false
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "WashServer": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "type": "string",
          "format": "uuid"
        }
      }
    }
  },
  "parameters": {
    "isManagedByMe": {
      "type": "boolean",
      "default": false,
      "name": "isManagedByMe",
      "in": "query"
    },
    "limit": {
      "minimum": 0,
      "type": "integer",
      "format": "int64",
      "default": 100,
      "description": "Maximum number of records to return",
      "name": "limit",
      "in": "query"
    },
    "offset": {
      "minimum": 0,
      "type": "integer",
      "format": "int64",
      "default": 0,
      "description": "Number of records to skip for pagination",
      "name": "offset",
      "in": "query"
    }
  },
  "responses": {
    "GenericError": {
      "description": "Generic error response",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
}
