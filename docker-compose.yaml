version: "3.8"

networks:
  rabbitmq_go_net:
    driver: bridge

services:
  db_wash_admin:
    container_name: wash_admin_postgresql
    image: postgres:14.5
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wash_admin
    ports:
      - "8091:5432"
  
  db_wash_bonus:
    container_name: wash_bonus_postgresql
    image: postgres:14.5
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: wash_bonus
    ports:
      - "8090:5432"
  rabbit:
    container_name: wash_bonus_rabbit
    image: rabbitmq:3.11.6-management
    restart: always
    ports:
      - "5671:5671"
      - "15672:15672"
    volumes:
      - ./environment/certs/test-certs/:/certs/
      - ./environment/rabbit/rabbit.conf:/etc/rabbitmq/rabbitmq.conf
      - ./environment/rabbit/data/:/var/lib/rabbitmq
      - ./environment/rabbit/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net
#  back:
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#      args:
#        GITHUB_USER: ${GITHUB_USER:?}
#        GITHUB_PASS: ${GITHUB_PASS:?}
#    ports:
#      - ${MSRV_PORT:-9091}:${MSRV_PORT:-9091}
#    depends_on:
#      - db_wash_bonus
#    environment:
#      MSRV_PORT: ${MSRV_PORT:-9091}
#      MSRV_RESET_DB: ${MSRV_RESET_DB:-false}
#      MSRV_DB_HOST: db
#      MSRV_DB_PORT: "5432"
#      MSRV_DB_USER: postgres
#      MSRV_DB_PASS: postgres
#      MSRV_DB_NAME: back
#      MSRV_CORS_ALLOWED_ORIGINS: ${MSRV_CORS_ALLOWED_ORIGINS:-http://localhost}
#      MSRV_DB_SSL_MODE_IS_REQUIRE: "false"
#      MSRV_MAILER_FROM: ${MSRV_MAILER_FROM}
#      MSRV_MAILER_FROM_NAME: ${MSRV_MAILER_FROM_NAME}
#      MSRV_MAILER_PASS: ${MSRV_MAILER_PASS}
#      FIREBASE_KEYFILE_PATH: ${FIREBASE_KEYFILE_PATH:-~/firebase_keyfile.json}
