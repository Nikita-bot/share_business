// Code generated by mtgroup-generator.
package app

import (
	"testing"

	"github.com/golang/mock/gomock"
	"github.com/powerman/check"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func TestGetToken(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().GetTokenAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().GetToken(gomock.Any(), gomock.Any()).Return(testToken1, nil)
	b, err := a.GetToken(profile, testToken1.ID)
	t.Nil(err)
	t.DeepEqual(testToken1, b)
}

func TestAddToken(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().AddTokenAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().AddToken(gomock.Any(), gomock.Any(), gomock.Any()).Return(testToken1, nil)
	b, err := a.AddToken(profile, testToken1)
	t.Nil(err)
	t.DeepEqual(testToken1, b)
}

func TestDeleteToken(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().DeleteTokenAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().DeleteToken(gomock.Any(), gomock.Any(), gomock.Any()).Return(nil)
	err := a.DeleteToken(profile, testToken1.ID)
	t.Nil(err)
}
