// Code generated by mtgroup-generator.
package app

import (
	"time"

	"github.com/go-openapi/strfmt"

	"github.com/google/uuid"

	"wash-bonus/internal/app"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

var (
	isolatedEntityID = uuid.New().String()
	profileID        = uuid.New().String()
	profile          = app.Profile{
		ID:    profileID,
		Authn: true,
		Authz: app.Authz{
			User:    true,
			Admin:   true,
			Manager: true,
		},
		IsolatedEntityID: isolatedEntityID,
	}
	profileUnAuth = app.Profile{
		ID:    profileID,
		Authn: false,
		Authz: app.Authz{
			User:    false,
			Admin:   false,
			Manager: false,
		},
		IsolatedEntityID: isolatedEntityID,
	}
	testPermission1 = &app.Permission{
		ID:   uuid.New().String(),
		Name: "libero",
	}
	testPermission2 = &app.Permission{
		ID:   uuid.New().String(),
		Name: "nihil",
	}
	testPermissions = []*app.Permission{testPermission1, testPermission2}
	testRole1       = &app.Role{
		Active:      false,
		ID:          uuid.New().String(),
		Name:        "delectus",
		Permissions: testPermissions,
	}
	testRole2 = &app.Role{
		Active:      false,
		ID:          uuid.New().String(),
		Name:        "inventore",
		Permissions: testPermissions,
	}
	testRoles    = []*app.Role{testRole1, testRole2}
	testSession1 = &app.Session{
		Active:       true,
		ClosingAt:    mustParseTime("2021-10-25T08:51:54.184Z"),
		CreatedAt:    mustParseTime("1998-06-04T16:48:36.001Z"),
		ExpirationAt: mustParseTime("1974-03-03T23:40:28.717Z"),
		ID:           uuid.New().String(),
		UpdateAt:     mustParseTime("1983-12-25T10:18:48.216Z"),
		User:         testToken1,
	}
	testSession2 = &app.Session{
		Active:       false,
		ClosingAt:    mustParseTime("1928-05-25T15:59:15.328Z"),
		CreatedAt:    mustParseTime("2019-10-18T06:59:21.068Z"),
		ExpirationAt: mustParseTime("1914-02-04T03:57:46.873Z"),
		ID:           uuid.New().String(),
		UpdateAt:     mustParseTime("1958-01-30T21:27:39.267Z"),
		User:         testToken2,
	}
	testSessions = []*app.Session{testSession1, testSession2}
	testToken1   = &app.Token{
		ExpirationAt: mustParseTime("2011-04-13T21:15:17.722Z"),
		ID:           uuid.New().String(),
		Token:        "minus",
		Type:         "aliquid",
	}
	testToken2 = &app.Token{
		ExpirationAt: mustParseTime("1923-10-28T11:06:48.986Z"),
		ID:           uuid.New().String(),
		Token:        "aut",
		Type:         "possimus",
	}
	testTokens = []*app.Token{testToken1, testToken2}
	testUser1  = &app.User{
		Active:     true,
		CreatedAt:  mustParseTime("1990-09-28T02:23:47.517Z"),
		ID:         uuid.New().String(),
		ModifiedAt: mustParseTime("2012-06-13T12:15:12.409Z"),
		Role:       testRole1,
	}
	testUser2 = &app.User{
		Active:     true,
		CreatedAt:  mustParseTime("1963-06-20T18:13:56.452Z"),
		ID:         uuid.New().String(),
		ModifiedAt: mustParseTime("1973-11-03T20:20:24.775Z"),
		Role:       testRole2,
	}
	testUsers       = []*app.User{testUser1, testUser2}
	testWashServer1 = &app.WashServer{
		CreatedAt:    mustParseTime("1975-05-01T01:06:58.866Z"),
		ID:           uuid.New().String(),
		Key:          "dolor",
		LastUpdateAt: mustParseTime("1930-12-07T09:46:48.156Z"),
		ModifiedAt:   mustParseTime("1933-03-12T12:13:43.559Z"),
		Name:         "ipsa",
	}
	testWashServer2 = &app.WashServer{
		CreatedAt:    mustParseTime("1945-12-18T18:37:10.108Z"),
		ID:           uuid.New().String(),
		Key:          "id",
		LastUpdateAt: mustParseTime("1986-08-11T00:12:04.260Z"),
		ModifiedAt:   mustParseTime("1950-12-26T15:42:47.528Z"),
		Name:         "quae",
	}
	testWashServers  = []*app.WashServer{testWashServer1, testWashServer2}
	testWashSession1 = &app.WashSession{
		Active:       false,
		ClosingAt:    mustParseTime("1939-06-29T13:13:28.600Z"),
		CreatedAt:    mustParseTime("1933-09-21T20:57:50.292Z"),
		ExpirationAt: mustParseTime("2000-03-03T08:03:14.356Z"),
		ID:           uuid.New().String(),
		UpdateAt:     mustParseTime("1947-01-13T21:19:10.325Z"),
		User:         testToken1,
		WashServer:   testWashServer1,
	}
	testWashSession2 = &app.WashSession{
		Active:       false,
		ClosingAt:    mustParseTime("1980-10-02T00:19:17.709Z"),
		CreatedAt:    mustParseTime("2017-07-19T19:26:43.669Z"),
		ExpirationAt: mustParseTime("2017-09-07T18:18:40.659Z"),
		ID:           uuid.New().String(),
		UpdateAt:     mustParseTime("1927-03-03T23:08:50.144Z"),
		User:         testToken2,
		WashServer:   testWashServer2,
	}
	testWashSessions = []*app.WashSession{testWashSession1, testWashSession2}
	listParams       = &app.ListParams{
		Offset: 0,
		Limit:  5,
	}
)

func mustParseTime(t string) *time.Time {
	date, err := time.Parse(time.RFC3339, t)
	if err != nil {
		date, _ = time.Parse(strfmt.RFC3339FullDate, t)
	}
	return &date
}
