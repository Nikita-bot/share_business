// Code generated by mtgroup-generator.
package app

import (
	"testing"

	"github.com/golang/mock/gomock"
	"github.com/powerman/check"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func TestGetPermission(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().GetPermissionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().GetPermission(gomock.Any(), gomock.Any()).Return(testPermission1, nil)
	b, err := a.GetPermission(profile, testPermission1.ID)
	t.Nil(err)
	t.DeepEqual(testPermission1, b)
}

func TestAddPermission(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().AddPermissionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().AddPermission(gomock.Any(), gomock.Any(), gomock.Any()).Return(testPermission1, nil)
	b, err := a.AddPermission(profile, testPermission1)
	t.Nil(err)
	t.DeepEqual(testPermission1, b)
}

func TestEditPermission(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().EditPermissionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().EditPermission(gomock.Any(), gomock.Any(), gomock.Any()).Return(nil)
	err := a.EditPermission(profile, testPermission1.ID, testPermission1)
	t.Nil(err)
}

func TestDeletePermission(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().DeletePermissionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().DeletePermission(gomock.Any(), gomock.Any(), gomock.Any()).Return(nil)
	err := a.DeletePermission(profile, testPermission1.ID)
	t.Nil(err)
}

func TestListPermission(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().ListPermissionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().ListPermission(gomock.Any(), gomock.Any()).Return(testPermissions, []string{}, nil)
	b, _, err := a.ListPermission(profile, listParams)
	t.Nil(err)
	t.DeepEqual(testPermissions, b)
}
