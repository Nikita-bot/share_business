// Code generated by mtgroup-generator.
package app

import (
	"testing"

	"github.com/golang/mock/gomock"
	"github.com/powerman/check"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func TestGetSession(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().GetSessionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().GetSession(gomock.Any(), gomock.Any()).Return(testSession1, nil)
	b, err := a.GetSession(profile, testSession1.ID)
	t.Nil(err)
	t.DeepEqual(testSession1, b)
}

func TestAddSession(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().AddSessionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().AddSession(gomock.Any(), gomock.Any(), gomock.Any()).Return(testSession1, nil)
	b, err := a.AddSession(profile, testSession1)
	t.Nil(err)
	t.DeepEqual(testSession1, b)
}

func TestEditSession(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().EditSessionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().EditSession(gomock.Any(), gomock.Any(), gomock.Any()).Return(nil)
	err := a.EditSession(profile, testSession1.ID, testSession1)
	t.Nil(err)
}

func TestDeleteSession(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().DeleteSessionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().DeleteSession(gomock.Any(), gomock.Any(), gomock.Any()).Return(nil)
	err := a.DeleteSession(profile, testSession1.ID)
	t.Nil(err)
}

func TestListSession(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)
	rulesSet := NewMockRulesSet(ctrl)

	a := New(mockRepo, rulesSet)

	rulesSet.EXPECT().ListSessionAccessManager(gomock.Any()).Return(true)
	mockRepo.EXPECT().ListSession(gomock.Any(), gomock.Any()).Return(testSessions, []string{}, nil)
	b, _, err := a.ListSession(profile, listParams)
	t.Nil(err)
	t.DeepEqual(testSessions, b)
}
