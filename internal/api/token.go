// Code generated by mtgroup-generator.
package api

import (
	"time"

	"wash-bonus/internal/api/restapi/models"
	"wash-bonus/internal/app"

	"github.com/go-openapi/strfmt"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func apiToken(a *app.Token) *models.Token {
	if a == nil {
		return nil
	}
	return &models.Token{
		ID:           a.ID,
		ExpirationAt: (*strfmt.DateTime)(a.ExpirationAt),
		Token:        a.Token,
		Type:         a.Type,
	}
}

func apiTokens(apps []*app.Token) []*models.Token {
	apis := []*models.Token{}
	for i := range apps {
		apis = append(apis, apiToken(apps[i]))
	}
	return apis
}

func appToken(a *models.Token) *app.Token {
	if a == nil {
		return nil
	}
	token := &app.Token{}
	token.ID = a.ID
	token.ExpirationAt = (*time.Time)(a.ExpirationAt)
	token.Token = a.Token
	token.Type = a.Type

	return token
}

func appTokens(apis []*models.Token) []*app.Token {
	apps := []*app.Token{}
	for i := range apis {
		apps = append(apps, appToken(apis[i]))
	}
	return apps
}

func appTokenAdd(a *models.TokenAdd) *app.Token {
	if a == nil {
		return nil
	}
	token := &app.Token{}
	token.ExpirationAt = (*time.Time)(a.ExpirationAt)
	token.Token = a.Token
	token.Type = a.Type

	return token
}

func appTokensAdd(apis []*models.TokenAdd) []*app.Token {
	apps := []*app.Token{}
	for i := range apis {
		apps = append(apps, appTokenAdd(apis[i]))
	}
	return apps
}
