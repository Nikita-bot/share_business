// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "microservice for the bonus system of self-service car washes",
    "title": "wash-bonus",
    "version": "1.0.0"
  },
  "paths": {
    "/addTestData": {
      "post": {
        "tags": [
          "Standard"
        ],
        "operationId": "addTestData",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/user/add": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "addUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/userAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/edit": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "editUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/userAdd"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/get": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/list": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "listUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/listParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user"
                  }
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/add": {
      "post": {
        "tags": [
          "WashServer"
        ],
        "operationId": "addWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/washServerAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/washServer"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/delete": {
      "delete": {
        "tags": [
          "WashServer"
        ],
        "operationId": "deleteWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/edit": {
      "put": {
        "tags": [
          "WashServer"
        ],
        "operationId": "editWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/washServerAdd"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/get": {
      "post": {
        "tags": [
          "WashServer"
        ],
        "operationId": "getWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/washServer"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/list": {
      "post": {
        "tags": [
          "WashServer"
        ],
        "operationId": "listWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/listParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/washServer"
                  }
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/add": {
      "post": {
        "tags": [
          "WashSession"
        ],
        "operationId": "addWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/washSessionAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/washSession"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/delete": {
      "delete": {
        "tags": [
          "WashSession"
        ],
        "operationId": "deleteWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/edit": {
      "put": {
        "tags": [
          "WashSession"
        ],
        "operationId": "editWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/washSessionAdd"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/get": {
      "post": {
        "tags": [
          "WashSession"
        ],
        "operationId": "getWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/washSession"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/list": {
      "post": {
        "tags": [
          "WashSession"
        ],
        "operationId": "listWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/listParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/washSession"
                  }
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "filter": {
      "type": "object",
      "properties": {
        "ignoreCase": {
          "type": "boolean"
        },
        "operator": {
          "description": "enum ==, !=, \u003c, \u003e, \u003c=, \u003e=, in, !in",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "filterGroup": {
      "description": "params for grouping filters",
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filter"
          }
        },
        "key": {
          "type": "string"
        },
        "logicFilter": {
          "description": "Comparing option: true == 'AND', false == 'OR'",
          "type": "boolean"
        }
      }
    },
    "listParams": {
      "description": "params for list method",
      "type": "object",
      "properties": {
        "filterGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterGroup"
          }
        },
        "limit": {
          "type": "integer",
          "minimum": 1
        },
        "offset": {
          "type": "integer"
        },
        "orderBy": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        "sortBy": {
          "type": "string"
        }
      }
    },
    "session": {
      "description": "session object",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "$ref": "#/definitions/token"
        }
      }
    },
    "sessionAdd": {
      "description": "session model for add and edit methods",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "type": "string"
        }
      }
    },
    "token": {
      "description": "token object",
      "type": "object",
      "properties": {
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "tokenAdd": {
      "description": "token model for add and edit methods",
      "type": "object",
      "properties": {
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "user": {
      "description": "user object",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "userAdd": {
      "description": "user model for add and edit methods",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        }
      }
    },
    "washServer": {
      "description": "washServer object",
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "lastUpdateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "washServerAdd": {
      "description": "washServer model for add and edit methods",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "lastUpdateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "washSession": {
      "description": "washSession object",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "$ref": "#/definitions/token"
        },
        "washServer": {
          "$ref": "#/definitions/washServer"
        }
      }
    },
    "washSessionAdd": {
      "description": "washSession model for add and edit methods",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "type": "string"
        },
        "washServer": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "microservice for the bonus system of self-service car washes",
    "title": "wash-bonus",
    "version": "1.0.0"
  },
  "paths": {
    "/addTestData": {
      "post": {
        "tags": [
          "Standard"
        ],
        "operationId": "addTestData",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/healthCheck": {
      "get": {
        "security": [
          {}
        ],
        "tags": [
          "Standard"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/user/add": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "addUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/userAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/edit": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "editUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/userAdd"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/get": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/list": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "listUser",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/listParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/user"
                  }
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/add": {
      "post": {
        "tags": [
          "WashServer"
        ],
        "operationId": "addWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/washServerAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/washServer"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/delete": {
      "delete": {
        "tags": [
          "WashServer"
        ],
        "operationId": "deleteWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/edit": {
      "put": {
        "tags": [
          "WashServer"
        ],
        "operationId": "editWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/washServerAdd"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/get": {
      "post": {
        "tags": [
          "WashServer"
        ],
        "operationId": "getWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/washServer"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washServer/list": {
      "post": {
        "tags": [
          "WashServer"
        ],
        "operationId": "listWashServer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/listParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/washServer"
                  }
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/add": {
      "post": {
        "tags": [
          "WashSession"
        ],
        "operationId": "addWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/washSessionAdd"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/washSession"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/delete": {
      "delete": {
        "tags": [
          "WashSession"
        ],
        "operationId": "deleteWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/edit": {
      "put": {
        "tags": [
          "WashSession"
        ],
        "operationId": "editWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/washSessionAdd"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/get": {
      "post": {
        "tags": [
          "WashSession"
        ],
        "operationId": "getWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/washSession"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/washSession/list": {
      "post": {
        "tags": [
          "WashSession"
        ],
        "operationId": "listWashSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/listParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/washSession"
                  }
                },
                "warnings": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "filter": {
      "type": "object",
      "properties": {
        "ignoreCase": {
          "type": "boolean"
        },
        "operator": {
          "description": "enum ==, !=, \u003c, \u003e, \u003c=, \u003e=, in, !in",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "filterGroup": {
      "description": "params for grouping filters",
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filter"
          }
        },
        "key": {
          "type": "string"
        },
        "logicFilter": {
          "description": "Comparing option: true == 'AND', false == 'OR'",
          "type": "boolean"
        }
      }
    },
    "listParams": {
      "description": "params for list method",
      "type": "object",
      "properties": {
        "filterGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/filterGroup"
          }
        },
        "limit": {
          "type": "integer",
          "minimum": 1
        },
        "offset": {
          "type": "integer",
          "minimum": 0
        },
        "orderBy": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        },
        "sortBy": {
          "type": "string"
        }
      }
    },
    "session": {
      "description": "session object",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "$ref": "#/definitions/token"
        }
      }
    },
    "sessionAdd": {
      "description": "session model for add and edit methods",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "type": "string"
        }
      }
    },
    "token": {
      "description": "token object",
      "type": "object",
      "properties": {
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "tokenAdd": {
      "description": "token model for add and edit methods",
      "type": "object",
      "properties": {
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "user": {
      "description": "user object",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "userAdd": {
      "description": "user model for add and edit methods",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        }
      }
    },
    "washServer": {
      "description": "washServer object",
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "lastUpdateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "washServerAdd": {
      "description": "washServer model for add and edit methods",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "lastUpdateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "washSession": {
      "description": "washSession object",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "id": {
          "type": "string"
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "$ref": "#/definitions/token"
        },
        "washServer": {
          "$ref": "#/definitions/washServer"
        }
      }
    },
    "washSessionAdd": {
      "description": "washSession model for add and edit methods",
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "closingAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "expirationAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "updateAt": {
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "user": {
          "type": "string"
        },
        "washServer": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "description": "Session token inside Authorization header.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authKey": []
    }
  ]
}`))
}
