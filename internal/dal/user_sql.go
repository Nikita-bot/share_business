// Code generated by mtgroup-generator.
package dal

import (
	uuid "github.com/satori/go.uuid"
	"time"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

const (
	sqlGetUserByIdentity = `
	SELECT
		id,
		active,
		created_at,
		identity_id,
		modified_at
	FROM
		users
	WHERE
		identity_id=:identity_id AND
		NOT deleted
	`
	sqlGetUser = `
	SELECT
		id,
		active,
		created_at,
		identity_id,
		modified_at
	FROM
		users
	WHERE
		id=:id AND
		NOT deleted
	`

	sqlAddUser = `
	INSERT INTO users(
		active,
		created_at,
		identity_id
	) VALUES (
		:active,
		:created_at,
		:identity_id
	)
	RETURNING
		id
	`

	sqlDeleteUser = `
	UPDATE
		users
	SET
		deleted=true,
		deleted_at=:deleted_at,
		deleted_by=:deleted_by
	WHERE
		id=:id AND
		NOT deleted
	`

	sqlEditUser = `
	UPDATE
		users
	SET
		active=:active,
		identity_id=:identity_id,
		modified_at=:modified_at,
		modified_by=:modified_by
	WHERE
		id=:id AND
		NOT deleted
	`

	sqlListUser = `
	SELECT
		id,
		active,
		created_at,
		identity_id,
		modified_at
	FROM
		users
	WHERE
		NOT deleted
	`
)

type (
	argGetUser struct {
		ID string `db:"id"`
	}

	argGetUserByIdentity struct {
		IdentityID string `db:"identity_id"`
	}

	argAddUser struct {
		Active     bool       `db:"active"`
		CreatedAt  *time.Time `db:"created_at"`
		IdentityID string     `db:"identity_id"`
	}

	argEditUser struct {
		ID         string        `db:"id"`
		Active     bool          `db:"active"`
		CreatedAt  *time.Time    `db:"created_at"`
		IdentityID string        `db:"identity_id"`
		ModifiedAt *time.Time    `db:"modified_at"`
		ModifiedBy uuid.NullUUID `db:"modified_by"`
	}

	argDeleteUser struct {
		ID        string        `db:"id"`
		DeletedAt time.Time     `db:"deleted_at"`
		DeletedBy uuid.NullUUID `db:"deleted_by"`
	}
)
