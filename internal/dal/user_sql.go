// Code generated by mtgroup-generator.
package dal

import (
	"database/sql"
	"time"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

const (
	sqlGetUser = `
	SELECT
		id,
		active,
		created_at,
		firebase_id,
		modified_at
	FROM
		users
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlGetMyUserID = `
	SELECT
		id
	FROM
		users
	WHERE
		created_by=:created_by AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted AND
		bound
	`

	sqlAddUser = `
	INSERT INTO users(
		active,
		created_at,
		firebase_id,
		modified_at,
		id,
		created_by,
		isolated_entity_id
	) VALUES (
		:active,
		:created_at,
		:firebase_id,
		:modified_at,
		:id,
		:created_by,
		:isolated_entity_id
	)
	RETURNING
		id
	`

	sqlBindUserToProfile = `
	UPDATE
		users
	SET
		bound=true
	WHERE
		id=:id AND
		created_by=:created_by AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted AND
		NOT bound
	`

	sqlDeleteUser = `
	UPDATE
		users
	SET
		deleted=true,
		deleted_at=:deleted_at,
		deleted_by=:deleted_by
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlEditUser = `
	UPDATE
		users
	SET
		active=:active,
		firebase_id=:firebase_id,
		modified_at=:modified_at
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`
	sqlSetModifiedParamsUser = `
	UPDATE
		users
	SET
		modified_at=:modified_at
		
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id
	`

	sqlListUser = `
	SELECT
		id,
		active,
		created_at,
		firebase_id,
		modified_at
	FROM
		users
	WHERE
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`
	sqlListUserCount = `
	SELECT
		COUNT(*)
	FROM
		users
	WHERE
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`
)

type (
	argGetUser struct {
		ID               sql.NullString `db:"id"`
		IsolatedEntityID string         `db:"isolated_entity_id"`
	}

	argGetMyUserID struct {
		CreatedBy        string `db:"created_by"`
		IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argAddUser struct {
		ID         string     `db:"id"`
		Active     bool       `db:"active"`
		CreatedAt  *time.Time `db:"created_at"`
		FirebaseID string     `db:"firebase_id"`
		ModifiedAt *time.Time `db:"modified_at"`

		CreatedBy        string `db:"created_by"`
		IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argBindUserToProfile struct {
		ID               string `db:"id"`
		CreatedBy        string `db:"created_by"`
		IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argEditUser struct {
		ID         string     `db:"id"`
		Active     bool       `db:"active"`
		CreatedAt  *time.Time `db:"created_at"`
		FirebaseID string     `db:"firebase_id"`
		ModifiedAt *time.Time `db:"modified_at"`

		IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argDeleteUser struct {
		ID               string     `db:"id"`
		DeletedAt        *time.Time `db:"deleted_at"`
		DeletedBy        string     `db:"deleted_by"`
		IsolatedEntityID string     `db:"isolated_entity_id"`
	}
	argSetModifiedParamsUser struct {
		ID               string     `db:"id"`
		ModifiedAt       *time.Time `db:"modified_at"`
		IsolatedEntityID string     `db:"isolated_entity_id"`
	}
)
