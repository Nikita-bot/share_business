// Code generated by mtgroup-generator.
package dal

import (
	"database/sql"
	"time"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

const (
	sqlGetWashSession = `
	SELECT
		id,
		active,
		closing_at,
		created_at,
		expiration_at,
		update_at,
		user_id,
		wash_server_id
	FROM
		wash_sessions
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlGetMyWashSessionID = `
	SELECT
		id
	FROM
		wash_sessions
	WHERE
		created_by=:created_by AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted AND
		bound
	`

	sqlAddWashSession = `
	INSERT INTO wash_sessions(
		active,
		closing_at,
		created_at,
		expiration_at,
		update_at,
		user_id,
		wash_server_id,
		id,
		created_by,
		isolated_entity_id
	) VALUES (
		:active,
		:closing_at,
		:created_at,
		:expiration_at,
		:update_at,
		:user_id,
		:wash_server_id,
		:id,
		:created_by,
		:isolated_entity_id
	)
	RETURNING
		id
	`

	sqlBindWashSessionToProfile = `
	UPDATE
		wash_sessions
	SET
		bound=true
	WHERE
		id=:id AND
		created_by=:created_by AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted AND
		NOT bound
	`

	sqlDeleteWashSession = `
	UPDATE
		wash_sessions
	SET
		deleted=true,
		deleted_at=:deleted_at,
		deleted_by=:deleted_by
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlEditWashSession = `
	UPDATE
		wash_sessions
	SET
		active=:active,
		closing_at=:closing_at,
		expiration_at=:expiration_at,
		update_at=:update_at,
		user_id=:user_id,
		wash_server_id=:wash_server_id
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlListWashSession = `
	SELECT
		id,
		active,
		closing_at,
		created_at,
		expiration_at,
		update_at,
		user_id,
		wash_server_id
	FROM
		wash_sessions
	WHERE
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`
	sqlListWashSessionCount = `
	SELECT
		COUNT(*)
	FROM
		wash_sessions
	WHERE
		isolated_entity_id=:isolated_entity_id AND
		NOT deleted
	`

	sqlGetUserForWashSessionLazyLoading = `
	SELECT
		id,
		expiration_at,
		token,
		type
	FROM
		tokens
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id
	`

	sqlGetWashServerForWashSessionLazyLoading = `
	SELECT
		id,
		created_at,
		key,
		last_update_at,
		modified_at,
		name
	FROM
		wash_servers
	WHERE
		id=:id AND
		isolated_entity_id=:isolated_entity_id
	`
)

type (
	argGetWashSession struct {
		ID               sql.NullString `db:"id"`
		IsolatedEntityID string         `db:"isolated_entity_id"`
	}

	argGetMyWashSessionID struct {
		CreatedBy        string `db:"created_by"`
		IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argAddWashSession struct {
		ID               string      `db:"id"`
		Active           bool        `db:"active"`
		ClosingAt        *time.Time  `db:"closing_at"`
		CreatedAt        *time.Time  `db:"created_at"`
		ExpirationAt     *time.Time  `db:"expiration_at"`
		UpdateAt         *time.Time  `db:"update_at"`
		UserID           interface{} `db:"user_id"`
		WashServerID     interface{} `db:"wash_server_id"`
		CreatedBy        string      `db:"created_by"`
		IsolatedEntityID string      `db:"isolated_entity_id"`
	}
	argBindWashSessionToProfile struct {
		ID               string `db:"id"`
		CreatedBy        string `db:"created_by"`
		IsolatedEntityID string `db:"isolated_entity_id"`
	}
	argEditWashSession struct {
		ID               string      `db:"id"`
		Active           bool        `db:"active"`
		ClosingAt        *time.Time  `db:"closing_at"`
		CreatedAt        *time.Time  `db:"created_at"`
		ExpirationAt     *time.Time  `db:"expiration_at"`
		UpdateAt         *time.Time  `db:"update_at"`
		UserID           interface{} `db:"user_id"`
		WashServerID     interface{} `db:"wash_server_id"`
		IsolatedEntityID string      `db:"isolated_entity_id"`
	}
	argDeleteWashSession struct {
		ID               string     `db:"id"`
		DeletedAt        *time.Time `db:"deleted_at"`
		DeletedBy        string     `db:"deleted_by"`
		IsolatedEntityID string     `db:"isolated_entity_id"`
	}
)
