// Code generated by mtgroup-generator.
package app

import (
	"time"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!
type WashSession struct {
	Active       bool
	ClosingAt    *time.Time
	CreatedAt    *time.Time
	ExpirationAt *time.Time
	ID           string
	UpdateAt     *time.Time
	User         *Token
	WashServer   *WashServer
}

func (a *app) GetWashSession(prof Profile, id string) (*WashSession, error) {
	if !a.rulesSet.GetWashSessionAccessManager(prof) {
		return nil, ErrAccessDenied
	}
	return a.repo.GetWashSession(id, prof.IsolatedEntityID)
}
func (a *app) AddWashSession(prof Profile, m *WashSession) (*WashSession, error) {
	if !a.rulesSet.AddWashSessionAccessManager(prof) {
		return nil, ErrAccessDenied
	}
	return a.repo.AddWashSession(prof.ID, prof.IsolatedEntityID, m)
}
func (a *app) EditWashSession(prof Profile, id string, m *WashSession) error {
	if !a.rulesSet.EditWashSessionAccessManager(prof) {
		return ErrAccessDenied
	}
	return a.repo.EditWashSession(id, prof.IsolatedEntityID, m)
}
func (a *app) DeleteWashSession(prof Profile, id string) error {
	if !a.rulesSet.DeleteWashSessionAccessManager(prof) {
		return ErrAccessDenied
	}
	return a.repo.DeleteWashSession(id, prof.ID, prof.IsolatedEntityID)
}
func (a *app) ListWashSession(prof Profile, params *ListParams) ([]*WashSession, []string, error) {
	if !a.rulesSet.ListWashSessionAccessManager(prof) {
		return nil, nil, ErrAccessDenied
	}
	return a.repo.ListWashSession(prof.IsolatedEntityID, params)
}
