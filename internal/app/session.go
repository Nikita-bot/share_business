// Code generated by mtgroup-generator.
package app

import (
	"time"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!
type Session struct {
	Active       bool
	ClosingAt    *time.Time
	CreatedAt    *time.Time
	ExpirationAt *time.Time
	ID           string
	UpdateAt     *time.Time
	User         *Token
}

func (a *app) GetSession(prof Profile, id string) (*Session, error) {
	if !a.rulesSet.GetSessionAccessManager(prof) {
		return nil, ErrAccessDenied
	}
	return a.repo.GetSession(id, prof.IsolatedEntityID)
}
func (a *app) AddSession(prof Profile, m *Session) (*Session, error) {
	if !a.rulesSet.AddSessionAccessManager(prof) {
		return nil, ErrAccessDenied
	}
	return a.repo.AddSession(prof.ID, prof.IsolatedEntityID, m)
}
func (a *app) EditSession(prof Profile, id string, m *Session) error {
	if !a.rulesSet.EditSessionAccessManager(prof) {
		return ErrAccessDenied
	}
	return a.repo.EditSession(id, prof.IsolatedEntityID, m)
}
func (a *app) DeleteSession(prof Profile, id string) error {
	if !a.rulesSet.DeleteSessionAccessManager(prof) {
		return ErrAccessDenied
	}
	return a.repo.DeleteSession(id, prof.ID, prof.IsolatedEntityID)
}
func (a *app) ListSession(prof Profile, params *ListParams) ([]*Session, []string, error) {
	if !a.rulesSet.ListSessionAccessManager(prof) {
		return nil, nil, ErrAccessDenied
	}
	return a.repo.ListSession(prof.IsolatedEntityID, params)
}
