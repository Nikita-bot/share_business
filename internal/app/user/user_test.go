// Code generated by mtgroup-generator.
package user

import (
	"github.com/golang/mock/gomock"
	"github.com/powerman/check"
	"testing"
	"wash-bonus/internal/app"
)

// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func TestGetUser(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)

	a := app.New(mockRepo)

	mockRepo.EXPECT().GetUser(gomock.Any(), gomock.Any()).Return(app.testUser1, nil)
	b, err := a.GetUser(app.profile, app.testUser1.ID)
	t.Nil(err)
	t.DeepEqual(app.testUser1, b)
}

func TestAddUser(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)

	a := app.New(mockRepo)

	mockRepo.EXPECT().AddUser(gomock.Any(), gomock.Any(), gomock.Any()).Return(app.testUser1, nil)
	b, err := a.AddUser(app.profile, app.testUser1)
	t.Nil(err)
	t.DeepEqual(app.testUser1, b)
}

func TestEditUser(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)

	a := app.New(mockRepo)

	mockRepo.EXPECT().EditUser(gomock.Any(), gomock.Any(), gomock.Any()).Return(nil)
	err := a.EditUser(app.profile, app.testUser1.ID, app.testUser1)
	t.Nil(err)
}

func TestDeleteUser(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)

	a := app.New(mockRepo)

	mockRepo.EXPECT().DeleteUser(gomock.Any(), gomock.Any(), gomock.Any()).Return(nil)
	err := a.DeleteUser(app.profile, app.testUser1.ID)
	t.Nil(err)
}

func TestListUser(tt *testing.T) {
	t := check.T(tt)
	t.Parallel()
	ctrl := gomock.NewController(t)
	defer ctrl.Finish()

	mockRepo := NewMockRepo(ctrl)

	a := app.New(mockRepo)

	mockRepo.EXPECT().ListUser(gomock.Any(), gomock.Any()).Return(app.testUsers, []string{}, nil)
	b, _, err := a.ListUser(app.profile, app.listParams)
	t.Nil(err)
	t.DeepEqual(app.testUsers, b)
}
